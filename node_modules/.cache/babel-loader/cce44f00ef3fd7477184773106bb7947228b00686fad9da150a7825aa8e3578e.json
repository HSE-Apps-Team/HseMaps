{"ast":null,"code":"/**\r\n * @module ScheduleManager\r\n * @description Manages schedule persistence and retrieval with data validation\r\n */\n\nexport class ScheduleManager {\n  /**\r\n   * Saves a validated schedule to localStorage\r\n   * @param {string} day - Schedule day identifier\r\n   * @param {string[]} rooms - Room identifiers\r\n   * @returns {string[]} Deduplicated room list\r\n   */\n  static save(day, rooms) {\n    if (!this.validateInput(day, rooms)) return [];\n    const uniqueRooms = [...new Set(rooms)];\n    localStorage.setItem(`${this.STORAGE_PREFIX}${day}`, JSON.stringify(uniqueRooms));\n    return uniqueRooms;\n  }\n\n  /**\r\n   * Retrieves and validates a stored schedule\r\n   * @param {string} day - Schedule day identifier\r\n   * @returns {string[]} Array of room identifiers\r\n   */\n  static load(day) {\n    try {\n      const data = localStorage.getItem(`${this.STORAGE_PREFIX}${day}`);\n      return data ? [...new Set(JSON.parse(data))] : [];\n    } catch {\n      return [];\n    }\n  }\n\n  /**\r\n   * Validates schedule input parameters\r\n   * @private\r\n   */\n  static validateInput(day, rooms) {\n    return day && Array.isArray(rooms);\n  }\n}\nScheduleManager.STORAGE_PREFIX = 'schedule_';","map":{"version":3,"names":["ScheduleManager","save","day","rooms","validateInput","uniqueRooms","Set","localStorage","setItem","STORAGE_PREFIX","JSON","stringify","load","data","getItem","parse","Array","isArray"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/ScheduleManager.js"],"sourcesContent":["/**\r\n * @module ScheduleManager\r\n * @description Manages schedule persistence and retrieval with data validation\r\n */\r\n\r\nexport class ScheduleManager {\r\n    static STORAGE_PREFIX = 'schedule_';\r\n    \r\n    /**\r\n     * Saves a validated schedule to localStorage\r\n     * @param {string} day - Schedule day identifier\r\n     * @param {string[]} rooms - Room identifiers\r\n     * @returns {string[]} Deduplicated room list\r\n     */\r\n    static save(day, rooms) {\r\n        if (!this.validateInput(day, rooms)) return [];\r\n        \r\n        const uniqueRooms = [...new Set(rooms)];\r\n        localStorage.setItem(\r\n            `${this.STORAGE_PREFIX}${day}`, \r\n            JSON.stringify(uniqueRooms)\r\n        );\r\n        return uniqueRooms;\r\n    }\r\n\r\n    /**\r\n     * Retrieves and validates a stored schedule\r\n     * @param {string} day - Schedule day identifier\r\n     * @returns {string[]} Array of room identifiers\r\n     */\r\n    static load(day) {\r\n        try {\r\n            const data = localStorage.getItem(`${this.STORAGE_PREFIX}${day}`);\r\n            return data ? [...new Set(JSON.parse(data))] : [];\r\n        } catch {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validates schedule input parameters\r\n     * @private\r\n     */\r\n    static validateInput(day, rooms) {\r\n        return day && Array.isArray(rooms);\r\n    }\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,eAAe,CAAC;EAGzB;AACJ;AACA;AACA;AACA;AACA;EACI,OAAOC,IAAIA,CAACC,GAAG,EAAEC,KAAK,EAAE;IACpB,IAAI,CAAC,IAAI,CAACC,aAAa,CAACF,GAAG,EAAEC,KAAK,CAAC,EAAE,OAAO,EAAE;IAE9C,MAAME,WAAW,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACH,KAAK,CAAC,CAAC;IACvCI,YAAY,CAACC,OAAO,CAChB,GAAG,IAAI,CAACC,cAAc,GAAGP,GAAG,EAAE,EAC9BQ,IAAI,CAACC,SAAS,CAACN,WAAW,CAC9B,CAAC;IACD,OAAOA,WAAW;EACtB;;EAEA;AACJ;AACA;AACA;AACA;EACI,OAAOO,IAAIA,CAACV,GAAG,EAAE;IACb,IAAI;MACA,MAAMW,IAAI,GAAGN,YAAY,CAACO,OAAO,CAAC,GAAG,IAAI,CAACL,cAAc,GAAGP,GAAG,EAAE,CAAC;MACjE,OAAOW,IAAI,GAAG,CAAC,GAAG,IAAIP,GAAG,CAACI,IAAI,CAACK,KAAK,CAACF,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;IACrD,CAAC,CAAC,MAAM;MACJ,OAAO,EAAE;IACb;EACJ;;EAEA;AACJ;AACA;AACA;EACI,OAAOT,aAAaA,CAACF,GAAG,EAAEC,KAAK,EAAE;IAC7B,OAAOD,GAAG,IAAIc,KAAK,CAACC,OAAO,CAACd,KAAK,CAAC;EACtC;AACJ;AAzCaH,eAAe,CACjBS,cAAc,GAAG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}