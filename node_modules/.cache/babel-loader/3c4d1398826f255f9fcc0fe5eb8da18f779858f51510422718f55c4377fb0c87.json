{"ast":null,"code":"// src/modules/EventHandlingModule.js\nimport { StateManager } from './StateManager.js';\nimport { RenderingModule } from './RenderingModule.js';\nimport { UtilityModule } from './UtilityModule.js';\nimport { DOMCache } from './DOMCache.js';\nimport { Config } from '../config/config.js';\nimport { ScheduleManager } from './ScheduleManager.js';\nexport const EventHandlingModule = {\n  markShortestPathFromInput() {\n    RenderingModule.refresh();\n    DOMCache[Config.SVG.SELECTORS.PROGBAR].value = 0;\n    DOMCache[Config.SVG.SELECTORS.SCROLL].scrollTop = 0;\n    const start = document.getElementById(\"start\").value.toUpperCase();\n    const end = document.getElementById(\"end\").value.toUpperCase();\n    UtilityModule.markShortestPath(start, end);\n    UtilityModule.configureScroll();\n  },\n  displayNext() {\n    const selectedDay = document.getElementById(\"daySelect\").value;\n    const schedule = ScheduleManager.getSchedule(selectedDay);\n    const currentClass = schedule[0];\n    const nextClass = schedule[1];\n    document.getElementById(\"nextDestination\").innerText = currentClass + \" -> \" + nextClass;\n  },\n  navSchedule() {\n    RenderingModule.refresh();\n    const selectedDay = document.getElementById(\"daySelect\").value;\n    const schedule = ScheduleManager.getSchedule(selectedDay);\n    let iterator = StateManager.get('iterator') || 1;\n    const currentClass = schedule[iterator - 1];\n    const nextClass = schedule[iterator % schedule.length];\n    if (!schedule.length) return;\n    document.getElementById(\"start\").value = currentClass;\n    document.getElementById(\"end\").value = nextClass;\n    this.markShortestPathFromInput();\n    StateManager.set('iterator', (iterator + 1) % schedule.length);\n    iterator = StateManager.get('iterator') || 1;\n    document.getElementById(\"nextDestination\").innerText = schedule[iterator - 1] + \" -> \" + schedule[iterator % schedule.length];\n  },\n  updateSliderValue() {\n    const slider = DOMCache[Config.SVG.SELECTORS.PROGBAR];\n    const scroll = DOMCache[Config.SVG.SELECTORS.SCROLL];\n    if (slider && scroll) {\n      slider.value = scroll.scrollTop;\n      UtilityModule.updateAgent();\n    }\n  }\n};\n\n// Remove direct DOM event bindings","map":{"version":3,"names":["StateManager","RenderingModule","UtilityModule","DOMCache","Config","ScheduleManager","EventHandlingModule","markShortestPathFromInput","refresh","SVG","SELECTORS","PROGBAR","value","SCROLL","scrollTop","start","document","getElementById","toUpperCase","end","markShortestPath","configureScroll","displayNext","selectedDay","schedule","getSchedule","currentClass","nextClass","innerText","navSchedule","iterator","get","length","set","updateSliderValue","slider","scroll","updateAgent"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/EventHandlingModule.js"],"sourcesContent":["// src/modules/EventHandlingModule.js\r\nimport { StateManager } from './StateManager.js';\r\nimport { RenderingModule } from './RenderingModule.js';\r\nimport { UtilityModule } from './UtilityModule.js';\r\nimport { DOMCache } from './DOMCache.js';\r\nimport { Config } from '../config/config.js';\r\nimport { ScheduleManager } from './ScheduleManager.js';\r\n\r\nexport const EventHandlingModule = {\r\n    markShortestPathFromInput() {\r\n        RenderingModule.refresh();\r\n        DOMCache[Config.SVG.SELECTORS.PROGBAR].value = 0;\r\n        DOMCache[Config.SVG.SELECTORS.SCROLL].scrollTop = 0;\r\n        const start = document.getElementById(\"start\").value.toUpperCase();\r\n        const end = document.getElementById(\"end\").value.toUpperCase();\r\n        UtilityModule.markShortestPath(start, end);\r\n        UtilityModule.configureScroll();\r\n    },\r\n    displayNext(){\r\n        const selectedDay = document.getElementById(\"daySelect\").value;\r\n        const schedule = ScheduleManager.getSchedule(selectedDay);\r\n        const currentClass = schedule[0];\r\n        const nextClass = schedule[1];\r\ndocument.getElementById(\"nextDestination\").innerText = currentClass + \" -> \" + nextClass;\r\n    },\r\n    navSchedule() {\r\n        RenderingModule.refresh();\r\n        const selectedDay = document.getElementById(\"daySelect\").value;\r\n        const schedule = ScheduleManager.getSchedule(selectedDay);\r\n        let iterator = StateManager.get('iterator') || 1;\r\n        const currentClass = schedule[iterator-1];\r\n        const nextClass = schedule[(iterator) % schedule.length];\r\n        \r\n        if (!schedule.length) return;\r\n        \r\n        \r\n        \r\n        document.getElementById(\"start\").value = currentClass;\r\n        document.getElementById(\"end\").value = nextClass;\r\n        \r\n        this.markShortestPathFromInput();\r\n        StateManager.set('iterator', (iterator+1) % schedule.length);\r\n        iterator = StateManager.get('iterator') || 1;\r\n        document.getElementById(\"nextDestination\").innerText = schedule[iterator-1] + \" -> \" + schedule[(iterator) % schedule.length];\r\n    },\r\n\r\n    updateSliderValue() {\r\n        const slider = DOMCache[Config.SVG.SELECTORS.PROGBAR];\r\n        const scroll = DOMCache[Config.SVG.SELECTORS.SCROLL];\r\n        if (slider && scroll) {\r\n            slider.value = scroll.scrollTop;\r\n            UtilityModule.updateAgent();\r\n        }\r\n    }\r\n};\r\n\r\n// Remove direct DOM event bindings"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}