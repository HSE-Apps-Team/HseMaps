{"ast":null,"code":"/**\r\n * @module DOMCache\r\n * @description Provides a proxy-based caching mechanism for DOM elements\r\n * @type {Proxy<Object, ProxyHandler>}\r\n */\n\nexport const DOMCache = new Proxy({}, {\n  /**\r\n   * @function get\r\n   * @param {Object} cache - The cache object\r\n   * @param {string} selector - CSS selector for the element\r\n   * @returns {Element|null} Cached DOM element or null if not found\r\n   */\n  get: (cache, selector) => {\n    try {\n      // Skip React internal properties\n      if (typeof selector !== 'string' || selector.startsWith('$$')) {\n        return undefined;\n      }\n      if (!cache[selector] || !cache[selector].isConnected) {\n        const element = document.querySelector(selector);\n        if (!element) {\n          // Only warn for actual UI selectors, not React internals\n          if (selector.startsWith('#') || selector.startsWith('.')) {\n            console.debug(`Element not found: ${selector}`);\n          }\n          return null;\n        }\n        cache[selector] = element;\n      }\n      return cache[selector];\n    } catch (error) {\n      // Only log actual selector errors\n      if (typeof selector === 'string') {\n        console.debug(`Invalid selector: ${selector}`);\n      }\n      return null;\n    }\n  }\n});","map":{"version":3,"names":["DOMCache","Proxy","get","cache","selector","startsWith","undefined","isConnected","element","document","querySelector","console","debug","error"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/DOMCache.js"],"sourcesContent":["/**\r\n * @module DOMCache\r\n * @description Provides a proxy-based caching mechanism for DOM elements\r\n * @type {Proxy<Object, ProxyHandler>}\r\n */\r\n\r\nexport const DOMCache = new Proxy({}, {\r\n    /**\r\n     * @function get\r\n     * @param {Object} cache - The cache object\r\n     * @param {string} selector - CSS selector for the element\r\n     * @returns {Element|null} Cached DOM element or null if not found\r\n     */\r\n    get: (cache, selector) => {\r\n        try {\r\n            // Skip React internal properties\r\n            if (typeof selector !== 'string' || selector.startsWith('$$')) {\r\n                return undefined;\r\n            }\r\n\r\n            if (!cache[selector] || !cache[selector].isConnected) {\r\n                const element = document.querySelector(selector);\r\n                if (!element) {\r\n                    // Only warn for actual UI selectors, not React internals\r\n                    if (selector.startsWith('#') || selector.startsWith('.')) {\r\n                        console.debug(`Element not found: ${selector}`);\r\n                    }\r\n                    return null;\r\n                }\r\n                cache[selector] = element;\r\n            }\r\n            return cache[selector];\r\n        } catch (error) {\r\n            // Only log actual selector errors\r\n            if (typeof selector === 'string') {\r\n                console.debug(`Invalid selector: ${selector}`);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n});"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,QAAQ,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,EAAE;EAClC;AACJ;AACA;AACA;AACA;AACA;EACIC,GAAG,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACtB,IAAI;MACA;MACA,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC3D,OAAOC,SAAS;MACpB;MAEA,IAAI,CAACH,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,CAACG,WAAW,EAAE;QAClD,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAACN,QAAQ,CAAC;QAChD,IAAI,CAACI,OAAO,EAAE;UACV;UACA,IAAIJ,QAAQ,CAACC,UAAU,CAAC,GAAG,CAAC,IAAID,QAAQ,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;YACtDM,OAAO,CAACC,KAAK,CAAC,sBAAsBR,QAAQ,EAAE,CAAC;UACnD;UACA,OAAO,IAAI;QACf;QACAD,KAAK,CAACC,QAAQ,CAAC,GAAGI,OAAO;MAC7B;MACA,OAAOL,KAAK,CAACC,QAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZ;MACA,IAAI,OAAOT,QAAQ,KAAK,QAAQ,EAAE;QAC9BO,OAAO,CAACC,KAAK,CAAC,qBAAqBR,QAAQ,EAAE,CAAC;MAClD;MACA,OAAO,IAAI;IACf;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}