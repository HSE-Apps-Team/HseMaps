{"ast":null,"code":"import { Config } from '../config/config.js';\nimport { DOMCache } from '../modules/DOMCache.js';\nimport { DataModule } from '../modules/DataModule.js';\n\n/**\r\n * @module CoreService\r\n * @description Centralized service handling state management, data operations, \r\n * and UI updates for the navigation system.\r\n */\nexport const CoreService = {\n  // Internal state\n  _state: {},\n  // State management\n  getState(key) {\n    return key ? this._state[key] : this._state;\n  },\n  setState(key, value) {\n    this._state[key] = value;\n    return value;\n  },\n  // Data initialization and management\n  async initialize() {\n    try {\n      // Use the existing DataModule instead of direct fetch to ensure compatibility\n      await DataModule.initialize();\n      // Store the data in our state for future use\n      this._state.navigationData = DataModule.get();\n\n      // Setup event listeners\n      window.addEventListener('resize', this.configureScroll);\n      return true;\n    } catch (error) {\n      console.error('Initialization failed:', error);\n      return false;\n    }\n  },\n  // DOM and UI utilities\n  configureScroll() {\n    const svgdiv = DOMCache[Config.SVG.SELECTORS.SVGDIV];\n    if (svgdiv) {\n      // Basic scroll configuration\n      svgdiv.scrollTop = (svgdiv.scrollHeight - svgdiv.clientHeight) / 2;\n      svgdiv.scrollLeft = (svgdiv.scrollWidth - svgdiv.clientWidth) / 2;\n    }\n  },\n  // Path finding and rendering\n  async findPath(start, end) {\n    if (!start || !end) {\n      return {\n        success: false,\n        error: \"Missing start or end location\"\n      };\n    }\n    if (start === end) {\n      return {\n        success: false,\n        error: \"Start and end locations are the same\"\n      };\n    }\n    const {\n      rooms,\n      nextMatrix,\n      distMatrix\n    } = this._state.navigationData || {};\n    if (!rooms || !rooms[start] || !rooms[end]) {\n      return {\n        success: false,\n        error: \"Invalid room identifier\"\n      };\n    }\n    try {\n      // Calculate path (simplified algorithm placeholder)\n      const path = this._calculatePath(start, end, nextMatrix, distMatrix, rooms);\n      this.setState('currentPath', path);\n      return {\n        success: true,\n        path\n      };\n    } catch (error) {\n      console.error(\"Path calculation error:\", error);\n      return {\n        success: false,\n        error: \"Failed to calculate path\"\n      };\n    }\n  },\n  // Private helper methods\n  _calculatePath(start, end, nextMatrix, distMatrix, rooms) {\n    // Get actual path calculation from DataModule to ensure compatibility\n    const pathData = DataModule.getPath(start, end);\n    return pathData || [];\n  },\n  // Agent position update\n  updateAgentPosition(progress = 0) {\n    const agent = DOMCache[Config.SVG.SELECTORS.AGENT];\n    const path = DOMCache[`${Config.SVG.SELECTORS.GRAPH} > polyline`];\n    if (!agent || !path) return false;\n\n    // Calculate agent position based on progress along path\n    try {\n      const pathLength = path.getTotalLength();\n      const point = path.getPointAtLength(pathLength * progress);\n      agent.setAttribute('cx', point.x);\n      agent.setAttribute('cy', point.y);\n      return true;\n    } catch (error) {\n      console.error(\"Failed to update agent position:\", error);\n      return false;\n    }\n  }\n};","map":{"version":3,"names":["Config","DOMCache","DataModule","CoreService","_state","getState","key","setState","value","initialize","navigationData","get","window","addEventListener","configureScroll","error","console","svgdiv","SVG","SELECTORS","SVGDIV","scrollTop","scrollHeight","clientHeight","scrollLeft","scrollWidth","clientWidth","findPath","start","end","success","rooms","nextMatrix","distMatrix","path","_calculatePath","pathData","getPath","updateAgentPosition","progress","agent","AGENT","GRAPH","pathLength","getTotalLength","point","getPointAtLength","setAttribute","x","y"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/services/CoreService.js"],"sourcesContent":["import { Config } from '../config/config.js';\r\nimport { DOMCache } from '../modules/DOMCache.js';\r\nimport { DataModule } from '../modules/DataModule.js';\r\n\r\n/**\r\n * @module CoreService\r\n * @description Centralized service handling state management, data operations, \r\n * and UI updates for the navigation system.\r\n */\r\nexport const CoreService = {\r\n    // Internal state\r\n    _state: {},\r\n    \r\n    // State management\r\n    getState(key) {\r\n        return key ? this._state[key] : this._state;\r\n    },\r\n    \r\n    setState(key, value) {\r\n        this._state[key] = value;\r\n        return value;\r\n    },\r\n    \r\n    // Data initialization and management\r\n    async initialize() {\r\n        try {\r\n            // Use the existing DataModule instead of direct fetch to ensure compatibility\r\n            await DataModule.initialize();\r\n            // Store the data in our state for future use\r\n            this._state.navigationData = DataModule.get();\r\n            \r\n            // Setup event listeners\r\n            window.addEventListener('resize', this.configureScroll);\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Initialization failed:', error);\r\n            return false;\r\n        }\r\n    },\r\n    \r\n    // DOM and UI utilities\r\n    configureScroll() {\r\n        const svgdiv = DOMCache[Config.SVG.SELECTORS.SVGDIV];\r\n        if (svgdiv) {\r\n            // Basic scroll configuration\r\n            svgdiv.scrollTop = (svgdiv.scrollHeight - svgdiv.clientHeight) / 2;\r\n            svgdiv.scrollLeft = (svgdiv.scrollWidth - svgdiv.clientWidth) / 2;\r\n        }\r\n    },\r\n    \r\n    // Path finding and rendering\r\n    async findPath(start, end) {\r\n        if (!start || !end) {\r\n            return { success: false, error: \"Missing start or end location\" };\r\n        }\r\n        \r\n        if (start === end) {\r\n            return { success: false, error: \"Start and end locations are the same\" };\r\n        }\r\n        \r\n        const { rooms, nextMatrix, distMatrix } = this._state.navigationData || {};\r\n        if (!rooms || !rooms[start] || !rooms[end]) {\r\n            return { success: false, error: \"Invalid room identifier\" };\r\n        }\r\n        \r\n        try {\r\n            // Calculate path (simplified algorithm placeholder)\r\n            const path = this._calculatePath(start, end, nextMatrix, distMatrix, rooms);\r\n            this.setState('currentPath', path);\r\n            return { success: true, path };\r\n        } catch (error) {\r\n            console.error(\"Path calculation error:\", error);\r\n            return { success: false, error: \"Failed to calculate path\" };\r\n        }\r\n    },\r\n    \r\n    // Private helper methods\r\n    _calculatePath(start, end, nextMatrix, distMatrix, rooms) {\r\n        // Get actual path calculation from DataModule to ensure compatibility\r\n        const pathData = DataModule.getPath(start, end);\r\n        return pathData || [];\r\n    },\r\n    \r\n    // Agent position update\r\n    updateAgentPosition(progress = 0) {\r\n        const agent = DOMCache[Config.SVG.SELECTORS.AGENT];\r\n        const path = DOMCache[`${Config.SVG.SELECTORS.GRAPH} > polyline`];\r\n        \r\n        if (!agent || !path) return false;\r\n        \r\n        // Calculate agent position based on progress along path\r\n        try {\r\n            const pathLength = path.getTotalLength();\r\n            const point = path.getPointAtLength(pathLength * progress);\r\n            \r\n            agent.setAttribute('cx', point.x);\r\n            agent.setAttribute('cy', point.y);\r\n            \r\n            return true;\r\n        } catch (error) {\r\n            console.error(\"Failed to update agent position:\", error);\r\n            return false;\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}