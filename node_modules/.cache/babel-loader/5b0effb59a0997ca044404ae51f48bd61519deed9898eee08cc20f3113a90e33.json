{"ast":null,"code":"import { Config } from '../config/config.js';\nimport { DOMCache } from './DOMCache.js';\nimport { CoreService } from '../services/CoreService.js';\n\n/**\r\n * @module UtilityModule\r\n * @description Streamlined utility functions for UI operations\r\n */\nexport const UtilityModule = {\n  /**\r\n   * @function configureScroll\r\n   * @description Configures scroll position - delegating to CoreService\r\n   */\n  configureScroll() {\n    CoreService.configureScroll();\n  },\n  /**\r\n   * @function focusOnElement\r\n   * @description Centers viewport on a specified element with margin\r\n   * @param {string} selector - DOM selector for target element\r\n   * @param {number} margin - Margin to maintain around element\r\n   */\n  focusOnElement(selector, margin = Config.DEFAULTS.MARGIN) {\n    const element = DOMCache[selector];\n    if (!element) return;\n    const svgdiv = DOMCache[Config.SVG.SELECTORS.SVGDIV];\n    if (!svgdiv) return;\n    try {\n      const bbox = element.getBBox();\n      const centerX = bbox.x + bbox.width / 2;\n      const centerY = bbox.y + bbox.height / 2;\n      svgdiv.scrollLeft = centerX - svgdiv.clientWidth / 2;\n      svgdiv.scrollTop = centerY - svgdiv.clientHeight / 2;\n    } catch (error) {\n      console.error(\"Focus error:\", error);\n    }\n  },\n  /**\r\n   * @function getElementPosition\r\n   * @description Gets the position of an element\r\n   * @param {string} selector - DOM selector\r\n   * @returns {Object|null} Position object or null\r\n   */\n  getElementPosition(selector) {\n    const element = DOMCache[selector];\n    if (!element) return null;\n    try {\n      const bbox = element.getBBox();\n      return {\n        x: bbox.x + bbox.width / 2,\n        y: bbox.y + bbox.height / 2,\n        width: bbox.width,\n        height: bbox.height\n      };\n    } catch (error) {\n      console.error(\"Position retrieval error:\", error);\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["Config","DOMCache","CoreService","UtilityModule","configureScroll","focusOnElement","selector","margin","DEFAULTS","MARGIN","element","svgdiv","SVG","SELECTORS","SVGDIV","bbox","getBBox","centerX","x","width","centerY","y","height","scrollLeft","clientWidth","scrollTop","clientHeight","error","console","getElementPosition"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/UtilityModule.js"],"sourcesContent":["import { Config } from '../config/config.js';\r\nimport { DOMCache } from './DOMCache.js';\r\nimport { CoreService } from '../services/CoreService.js';\r\n\r\n/**\r\n * @module UtilityModule\r\n * @description Streamlined utility functions for UI operations\r\n */\r\nexport const UtilityModule = {\r\n    /**\r\n     * @function configureScroll\r\n     * @description Configures scroll position - delegating to CoreService\r\n     */\r\n    configureScroll() {\r\n        CoreService.configureScroll();\r\n    },\r\n    \r\n    /**\r\n     * @function focusOnElement\r\n     * @description Centers viewport on a specified element with margin\r\n     * @param {string} selector - DOM selector for target element\r\n     * @param {number} margin - Margin to maintain around element\r\n     */\r\n    focusOnElement(selector, margin = Config.DEFAULTS.MARGIN) {\r\n        const element = DOMCache[selector];\r\n        if (!element) return;\r\n        \r\n        const svgdiv = DOMCache[Config.SVG.SELECTORS.SVGDIV];\r\n        if (!svgdiv) return;\r\n        \r\n        try {\r\n            const bbox = element.getBBox();\r\n            const centerX = bbox.x + bbox.width / 2;\r\n            const centerY = bbox.y + bbox.height / 2;\r\n            \r\n            svgdiv.scrollLeft = centerX - svgdiv.clientWidth / 2;\r\n            svgdiv.scrollTop = centerY - svgdiv.clientHeight / 2;\r\n        } catch (error) {\r\n            console.error(\"Focus error:\", error);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @function getElementPosition\r\n     * @description Gets the position of an element\r\n     * @param {string} selector - DOM selector\r\n     * @returns {Object|null} Position object or null\r\n     */\r\n    getElementPosition(selector) {\r\n        const element = DOMCache[selector];\r\n        if (!element) return null;\r\n        \r\n        try {\r\n            const bbox = element.getBBox();\r\n            return {\r\n                x: bbox.x + bbox.width / 2,\r\n                y: bbox.y + bbox.height / 2,\r\n                width: bbox.width,\r\n                height: bbox.height\r\n            };\r\n        } catch (error) {\r\n            console.error(\"Position retrieval error:\", error);\r\n            return null;\r\n        }\r\n    }\r\n};"],"mappings":"AAAA,SAASA,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,WAAW,QAAQ,4BAA4B;;AAExD;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG;EACzB;AACJ;AACA;AACA;EACIC,eAAeA,CAAA,EAAG;IACdF,WAAW,CAACE,eAAe,CAAC,CAAC;EACjC,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIC,cAAcA,CAACC,QAAQ,EAAEC,MAAM,GAAGP,MAAM,CAACQ,QAAQ,CAACC,MAAM,EAAE;IACtD,MAAMC,OAAO,GAAGT,QAAQ,CAACK,QAAQ,CAAC;IAClC,IAAI,CAACI,OAAO,EAAE;IAEd,MAAMC,MAAM,GAAGV,QAAQ,CAACD,MAAM,CAACY,GAAG,CAACC,SAAS,CAACC,MAAM,CAAC;IACpD,IAAI,CAACH,MAAM,EAAE;IAEb,IAAI;MACA,MAAMI,IAAI,GAAGL,OAAO,CAACM,OAAO,CAAC,CAAC;MAC9B,MAAMC,OAAO,GAAGF,IAAI,CAACG,CAAC,GAAGH,IAAI,CAACI,KAAK,GAAG,CAAC;MACvC,MAAMC,OAAO,GAAGL,IAAI,CAACM,CAAC,GAAGN,IAAI,CAACO,MAAM,GAAG,CAAC;MAExCX,MAAM,CAACY,UAAU,GAAGN,OAAO,GAAGN,MAAM,CAACa,WAAW,GAAG,CAAC;MACpDb,MAAM,CAACc,SAAS,GAAGL,OAAO,GAAGT,MAAM,CAACe,YAAY,GAAG,CAAC;IACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIE,kBAAkBA,CAACvB,QAAQ,EAAE;IACzB,MAAMI,OAAO,GAAGT,QAAQ,CAACK,QAAQ,CAAC;IAClC,IAAI,CAACI,OAAO,EAAE,OAAO,IAAI;IAEzB,IAAI;MACA,MAAMK,IAAI,GAAGL,OAAO,CAACM,OAAO,CAAC,CAAC;MAC9B,OAAO;QACHE,CAAC,EAAEH,IAAI,CAACG,CAAC,GAAGH,IAAI,CAACI,KAAK,GAAG,CAAC;QAC1BE,CAAC,EAAEN,IAAI,CAACM,CAAC,GAAGN,IAAI,CAACO,MAAM,GAAG,CAAC;QAC3BH,KAAK,EAAEJ,IAAI,CAACI,KAAK;QACjBG,MAAM,EAAEP,IAAI,CAACO;MACjB,CAAC;IACL,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO,IAAI;IACf;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}