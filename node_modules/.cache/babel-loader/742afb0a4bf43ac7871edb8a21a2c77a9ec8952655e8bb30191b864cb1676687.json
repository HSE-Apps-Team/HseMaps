{"ast":null,"code":"import { DataModule } from \"./DataModule.js\";\nimport { StateManager } from './StateManager.js';\nimport { Config } from '../config/config.js';\nimport { ImageModule } from './ImageModule.js';\n\n/**\r\n * @module StreetViewModule\r\n * @description Manages street view image retrieval and display for path segments,\r\n * including fallback handling for missing images and error states.\r\n */\nexport const StreetViewModule = {\n  /** @constant {string} DEFAULT_IMAGE - Path to the default fallback image */\n  DEFAULT_IMAGE: '/assets/no-streetview.jpg',\n  /**\r\n   * Retrieves the appropriate street view image for the current path segment.\r\n   * @returns {string} URL of the street view image or default image if none available\r\n   * @throws {Error} When image retrieval fails\r\n   */\n  getImage() {\n    const imgs = DataModule.get('imgs');\n    const currentPathSegment = StateManager.get('currentPathSegment');\n    const path = StateManager.get('path');\n    if (!path || currentPathSegment === undefined || !imgs) {\n      return ImageModule.getImageUrl('no-streetview.jpg');\n    }\n    const imageKey = `${path[currentPathSegment]}-${path[currentPathSegment + 1]}.jpg`;\n    return ImageModule.getImageUrl(imageKey) || ImageModule.getImageUrl('no-streetview.jpg');\n  }\n};","map":{"version":3,"names":["DataModule","StateManager","Config","ImageModule","StreetViewModule","DEFAULT_IMAGE","getImage","imgs","get","currentPathSegment","path","undefined","getImageUrl","imageKey"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/StreetViewModule.js"],"sourcesContent":["import { DataModule } from \"./DataModule.js\";\r\nimport { StateManager } from './StateManager.js';\r\nimport { Config } from '../config/config.js';\r\nimport { ImageModule } from './ImageModule.js';\r\n\r\n/**\r\n * @module StreetViewModule\r\n * @description Manages street view image retrieval and display for path segments,\r\n * including fallback handling for missing images and error states.\r\n */\r\nexport const StreetViewModule = {\r\n    /** @constant {string} DEFAULT_IMAGE - Path to the default fallback image */\r\n    DEFAULT_IMAGE: '/assets/no-streetview.jpg',\r\n    \r\n    /**\r\n     * Retrieves the appropriate street view image for the current path segment.\r\n     * @returns {string} URL of the street view image or default image if none available\r\n     * @throws {Error} When image retrieval fails\r\n     */\r\n    getImage() {\r\n        const imgs = DataModule.get('imgs');\r\n        const currentPathSegment = StateManager.get('currentPathSegment');\r\n        const path = StateManager.get('path');\r\n\r\n        if (!path || currentPathSegment === undefined || !imgs) {\r\n            return ImageModule.getImageUrl('no-streetview.jpg');\r\n        }\r\n\r\n        const imageKey = `${path[currentPathSegment]}-${path[currentPathSegment + 1]}.jpg`;\r\n        return ImageModule.getImageUrl(imageKey) || ImageModule.getImageUrl('no-streetview.jpg');\r\n    }\r\n};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG;EAC5B;EACAC,aAAa,EAAE,2BAA2B;EAE1C;AACJ;AACA;AACA;AACA;EACIC,QAAQA,CAAA,EAAG;IACP,MAAMC,IAAI,GAAGP,UAAU,CAACQ,GAAG,CAAC,MAAM,CAAC;IACnC,MAAMC,kBAAkB,GAAGR,YAAY,CAACO,GAAG,CAAC,oBAAoB,CAAC;IACjE,MAAME,IAAI,GAAGT,YAAY,CAACO,GAAG,CAAC,MAAM,CAAC;IAErC,IAAI,CAACE,IAAI,IAAID,kBAAkB,KAAKE,SAAS,IAAI,CAACJ,IAAI,EAAE;MACpD,OAAOJ,WAAW,CAACS,WAAW,CAAC,mBAAmB,CAAC;IACvD;IAEA,MAAMC,QAAQ,GAAG,GAAGH,IAAI,CAACD,kBAAkB,CAAC,IAAIC,IAAI,CAACD,kBAAkB,GAAG,CAAC,CAAC,MAAM;IAClF,OAAON,WAAW,CAACS,WAAW,CAACC,QAAQ,CAAC,IAAIV,WAAW,CAACS,WAAW,CAAC,mBAAmB,CAAC;EAC5F;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}