{"ast":null,"code":"import { StateManager } from './StateManager.js';\nimport { RenderingModule } from './RenderingModule.js';\nimport { UtilityModule } from './UtilityModule.js';\nimport { DOMCache } from './DOMCache.js';\nimport { Config } from '../config/config.js';\nimport { ScheduleManager } from './ScheduleManager.js';\nimport { DataModule } from './DataModule.js';\nimport { PathTransitionHandler } from './PathTransitionHandler.js';\nimport { PathfindingModule } from './PathfindingModule.js';\nimport mainFloorImage from '../elements/mainfloorcrunched.png';\nimport combFloorImage from '../elements/combscaled.png';\n\n/**\r\n * @module EventHandlingModule\r\n * @description Manages user interactions and event handling for navigation features\r\n */\nexport const EventHandlingModule = {\n  /**\r\n   * @function markShortestPath\r\n   * @async\r\n   * @description Calculates and displays the shortest path between selected rooms\r\n   * @throws {Error} If room selection or path finding fails\r\n   */\n  async markShortestPath() {\n    var _document$getElementB, _document$getElementB2;\n    const start = (_document$getElementB = document.getElementById(\"start\").value) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.toUpperCase();\n    const end = (_document$getElementB2 = document.getElementById(\"end\").value) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.toUpperCase();\n    if (!start || !end) {\n      alert(\"Please enter both start and end rooms\");\n      return;\n    }\n    const {\n      rooms,\n      nextMatrix,\n      distMatrix,\n      vertices\n    } = DataModule.get();\n    if (!rooms[start] || !rooms[end]) {\n      alert(\"One or both rooms not found\");\n      return;\n    }\n    RenderingModule.refresh();\n    StateManager.set('firstPathRendered', true);\n    StateManager.set('secondPathRendered', false);\n    StateManager.set('maskedImages', null);\n    DOMCache[Config.SVG.SELECTORS.PROGBAR].value = 0;\n    DOMCache[Config.SVG.SELECTORS.SCROLL].scrollTop = 0;\n    const path = PathfindingModule.findShortestPath(nextMatrix, distMatrix, start, end, rooms);\n    if (!path.length) {\n      alert(\"No valid path found\");\n      return;\n    }\n    StateManager.set('path', path);\n    const stairIndex = PathTransitionHandler.getStairIndex(path);\n    const points = path.map(p => `${vertices[p].x},${vertices[p].y}`);\n    const segments = stairIndex === -1 ? [points.join(' '), ''] : [points.slice(0, stairIndex).join(' '), points.slice(stairIndex).join(' ')];\n    const [firstFloorImage, secondFloorImage, firstFloor, secondFloor] = path[0] > Config.THRESHOLD.FLOOR_CHANGE ? [combFloorImage, mainFloorImage, 'comb', 'main'] : [mainFloorImage, combFloorImage, 'main', 'comb'];\n    await RenderingModule.generateMask(segments[0], firstFloorImage, firstFloor);\n    await RenderingModule.generateMask(segments[1], secondFloorImage, secondFloor);\n    UtilityModule.markShortestPath();\n    UtilityModule.configureScroll();\n  },\n  /**\r\n   * @function displayNextClass\r\n   * @description Updates the UI to show the next class in the schedule\r\n   */\n  displayNextClass() {\n    const schedule = ScheduleManager.load(document.getElementById(\"daySelect\").value);\n    document.getElementById(\"nextDestination\").innerText = `${schedule[0] || ''} -> ${schedule[1] || ''}`;\n  },\n  /**\r\n   * @function navigateSchedule\r\n   * @description Handles navigation between consecutive classes in the schedule\r\n   */\n  navigateSchedule() {\n    const schedule = ScheduleManager.load(document.getElementById(\"daySelect\").value);\n    if (!(schedule !== null && schedule !== void 0 && schedule.length)) {\n      alert(\"No schedule available\");\n      return;\n    }\n    let iterator = StateManager.get('iterator') || 1;\n    const [current, next] = [schedule[iterator - 1], schedule[iterator % schedule.length]];\n    if (current === next) {\n      alert(\"Next class is in the same room\");\n      return;\n    }\n    RenderingModule.refresh();\n    document.getElementById(\"start\").value = current;\n    document.getElementById(\"end\").value = next;\n    // Fix: Call markShortestPath with correct context\n    EventHandlingModule.markShortestPath();\n    StateManager.set('iterator', (iterator + 1) % schedule.length);\n    const newIterator = StateManager.get('iterator') || 1;\n    document.getElementById(\"nextDestination\").innerText = `${schedule[newIterator - 1]} -> ${schedule[newIterator % schedule.length]}`;\n  },\n  /**\r\n   * @function updateSlider\r\n   * @description Updates the progress slider based on scroll position\r\n   */\n  updateSlider() {\n    const [slider, scroll] = [DOMCache[Config.SVG.SELECTORS.PROGBAR], DOMCache[Config.SVG.SELECTORS.SCROLL]];\n    if (slider && scroll) {\n      slider.value = scroll.scrollTop;\n      UtilityModule.updateAgent();\n    }\n  }\n};","map":{"version":3,"names":["StateManager","RenderingModule","UtilityModule","DOMCache","Config","ScheduleManager","DataModule","PathTransitionHandler","PathfindingModule","mainFloorImage","combFloorImage","EventHandlingModule","markShortestPath","_document$getElementB","_document$getElementB2","start","document","getElementById","value","toUpperCase","end","alert","rooms","nextMatrix","distMatrix","vertices","get","refresh","set","SVG","SELECTORS","PROGBAR","SCROLL","scrollTop","path","findShortestPath","length","stairIndex","getStairIndex","points","map","p","x","y","segments","join","slice","firstFloorImage","secondFloorImage","firstFloor","secondFloor","THRESHOLD","FLOOR_CHANGE","generateMask","configureScroll","displayNextClass","schedule","load","innerText","navigateSchedule","iterator","current","next","newIterator","updateSlider","slider","scroll","updateAgent"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/EventHandlingModule.js"],"sourcesContent":["import { StateManager } from './StateManager.js';\r\nimport { RenderingModule } from './RenderingModule.js';\r\nimport { UtilityModule } from './UtilityModule.js';\r\nimport { DOMCache } from './DOMCache.js';\r\nimport { Config } from '../config/config.js';\r\nimport { ScheduleManager } from './ScheduleManager.js';\r\nimport { DataModule } from './DataModule.js';\r\nimport { PathTransitionHandler } from './PathTransitionHandler.js';\r\nimport { PathfindingModule } from './PathfindingModule.js';\r\nimport mainFloorImage from '../elements/mainfloorcrunched.png';\r\nimport combFloorImage from '../elements/combscaled.png';\r\n\r\n/**\r\n * @module EventHandlingModule\r\n * @description Manages user interactions and event handling for navigation features\r\n */\r\nexport const EventHandlingModule = {\r\n    /**\r\n     * @function markShortestPath\r\n     * @async\r\n     * @description Calculates and displays the shortest path between selected rooms\r\n     * @throws {Error} If room selection or path finding fails\r\n     */\r\n    async markShortestPath() {\r\n        const start = document.getElementById(\"start\").value?.toUpperCase();\r\n        const end = document.getElementById(\"end\").value?.toUpperCase();\r\n        \r\n        if (!start || !end) {\r\n            alert(\"Please enter both start and end rooms\");\r\n            return;\r\n        }\r\n\r\n        const { rooms, nextMatrix, distMatrix, vertices } = DataModule.get();\r\n        if (!rooms[start] || !rooms[end]) {\r\n            alert(\"One or both rooms not found\");\r\n            return;\r\n        }\r\n\r\n        RenderingModule.refresh();\r\n        StateManager.set('firstPathRendered', true);\r\n        StateManager.set('secondPathRendered', false);\r\n        StateManager.set('maskedImages', null);\r\n        DOMCache[Config.SVG.SELECTORS.PROGBAR].value = 0;\r\n        DOMCache[Config.SVG.SELECTORS.SCROLL].scrollTop = 0;\r\n        \r\n        const path = PathfindingModule.findShortestPath(nextMatrix, distMatrix, start, end, rooms);\r\n        if (!path.length) {\r\n            alert(\"No valid path found\");\r\n            return;\r\n        }\r\n\r\n        StateManager.set('path', path);\r\n        const stairIndex = PathTransitionHandler.getStairIndex(path);\r\n        const points = path.map(p => `${vertices[p].x},${vertices[p].y}`);\r\n        const segments = stairIndex === -1 ? \r\n            [points.join(' '), ''] : \r\n            [points.slice(0, stairIndex).join(' '), points.slice(stairIndex).join(' ')];\r\n\r\n        const [firstFloorImage, secondFloorImage, firstFloor, secondFloor] = \r\n            path[0] > Config.THRESHOLD.FLOOR_CHANGE ?\r\n            [combFloorImage, mainFloorImage, 'comb', 'main'] :\r\n            [mainFloorImage, combFloorImage, 'main', 'comb'];\r\n\r\n        await RenderingModule.generateMask(segments[0], firstFloorImage, firstFloor);\r\n        await RenderingModule.generateMask(segments[1], secondFloorImage, secondFloor);\r\n        \r\n        UtilityModule.markShortestPath();\r\n        UtilityModule.configureScroll();\r\n    },\r\n\r\n    /**\r\n     * @function displayNextClass\r\n     * @description Updates the UI to show the next class in the schedule\r\n     */\r\n    displayNextClass() {\r\n        const schedule = ScheduleManager.load(document.getElementById(\"daySelect\").value);\r\n        document.getElementById(\"nextDestination\").innerText = \r\n            `${schedule[0] || ''} -> ${schedule[1] || ''}`;\r\n    },\r\n\r\n    /**\r\n     * @function navigateSchedule\r\n     * @description Handles navigation between consecutive classes in the schedule\r\n     */\r\n    navigateSchedule() {\r\n        const schedule = ScheduleManager.load(document.getElementById(\"daySelect\").value);\r\n        if (!schedule?.length) {\r\n            alert(\"No schedule available\");\r\n            return;\r\n        }\r\n\r\n        let iterator = StateManager.get('iterator') || 1;\r\n        const [current, next] = [schedule[iterator - 1], schedule[iterator % schedule.length]];\r\n\r\n        if (current === next) {\r\n            alert(\"Next class is in the same room\");\r\n            return;\r\n        }\r\n\r\n        RenderingModule.refresh();\r\n        document.getElementById(\"start\").value = current;\r\n        document.getElementById(\"end\").value = next;\r\n        // Fix: Call markShortestPath with correct context\r\n        EventHandlingModule.markShortestPath();\r\n        \r\n        StateManager.set('iterator', (iterator + 1) % schedule.length);\r\n        const newIterator = StateManager.get('iterator') || 1;\r\n        document.getElementById(\"nextDestination\").innerText = \r\n            `${schedule[newIterator - 1]} -> ${schedule[newIterator % schedule.length]}`;\r\n    },\r\n\r\n    /**\r\n     * @function updateSlider\r\n     * @description Updates the progress slider based on scroll position\r\n     */\r\n    updateSlider() {\r\n        const [slider, scroll] = [\r\n            DOMCache[Config.SVG.SELECTORS.PROGBAR],\r\n            DOMCache[Config.SVG.SELECTORS.SCROLL]\r\n        ];\r\n        if (slider && scroll) {\r\n            slider.value = scroll.scrollTop;\r\n            UtilityModule.updateAgent();\r\n        }\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}