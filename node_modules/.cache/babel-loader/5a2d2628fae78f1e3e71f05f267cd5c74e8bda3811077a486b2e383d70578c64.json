{"ast":null,"code":"/**\r\n * @module ColorModule\r\n * @description Manages color calculations for progress visualization\r\n */\n\nexport const ColorModule = {\n  /**\r\n   * @function getColor\r\n   * @param {number} progress - Progress value between 0 and 1\r\n   * @returns {string} RGB color string\r\n   * @description Calculates color based on progress with caching\r\n   */\n  getColor: (() => {\n    const colorCache = new Map();\n    return progress => {\n      try {\n        const validProgress = Math.max(0, Math.min(1, Number(progress) || 0));\n        const key = Math.round(validProgress * 100);\n        if (!colorCache.has(key)) {\n          if (validProgress >= 0.99) {\n            colorCache.set(key, 'rgb(0,255,0)');\n          } else {\n            const green = Math.min(Math.floor(validProgress * 510), 255);\n            const red = validProgress >= 0.49 ? Math.max(255 - Math.floor((validProgress - 0.49) * 510), 0) : 255;\n            colorCache.set(key, `rgb(${red},${green},0)`);\n          }\n        }\n        return colorCache.get(key);\n      } catch (error) {\n        console.error('Color calculation error:', error);\n        return 'rgb(128,128,128)'; // Fallback color\n      }\n    };\n  })()\n};","map":{"version":3,"names":["ColorModule","getColor","colorCache","Map","progress","validProgress","Math","max","min","Number","key","round","has","set","green","floor","red","get","error","console"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/ColorModule.js"],"sourcesContent":["/**\r\n * @module ColorModule\r\n * @description Manages color calculations for progress visualization\r\n */\r\n\r\nexport const ColorModule = {\r\n    /**\r\n     * @function getColor\r\n     * @param {number} progress - Progress value between 0 and 1\r\n     * @returns {string} RGB color string\r\n     * @description Calculates color based on progress with caching\r\n     */\r\n    getColor: (() => {\r\n        const colorCache = new Map();\r\n        \r\n        return (progress) => {\r\n            try {\r\n                const validProgress = Math.max(0, Math.min(1, Number(progress) || 0));\r\n                const key = Math.round(validProgress * 100);\r\n                \r\n                if (!colorCache.has(key)) {\r\n                    if (validProgress >= 0.99) {\r\n                        colorCache.set(key, 'rgb(0,255,0)');\r\n                    } else {\r\n                        const green = Math.min(Math.floor(validProgress * 510), 255);\r\n                        const red = validProgress >= 0.49 \r\n                            ? Math.max(255 - Math.floor((validProgress - 0.49) * 510), 0)\r\n                            : 255;\r\n                            \r\n                        colorCache.set(key, `rgb(${red},${green},0)`);\r\n                    }\r\n                }\r\n                return colorCache.get(key);\r\n            } catch (error) {\r\n                console.error('Color calculation error:', error);\r\n                return 'rgb(128,128,128)'; // Fallback color\r\n            }\r\n        };\r\n    })()\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,WAAW,GAAG;EACvB;AACJ;AACA;AACA;AACA;AACA;EACIC,QAAQ,EAAE,CAAC,MAAM;IACb,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE5B,OAAQC,QAAQ,IAAK;MACjB,IAAI;QACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEC,MAAM,CAACL,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,MAAMM,GAAG,GAAGJ,IAAI,CAACK,KAAK,CAACN,aAAa,GAAG,GAAG,CAAC;QAE3C,IAAI,CAACH,UAAU,CAACU,GAAG,CAACF,GAAG,CAAC,EAAE;UACtB,IAAIL,aAAa,IAAI,IAAI,EAAE;YACvBH,UAAU,CAACW,GAAG,CAACH,GAAG,EAAE,cAAc,CAAC;UACvC,CAAC,MAAM;YACH,MAAMI,KAAK,GAAGR,IAAI,CAACE,GAAG,CAACF,IAAI,CAACS,KAAK,CAACV,aAAa,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;YAC5D,MAAMW,GAAG,GAAGX,aAAa,IAAI,IAAI,GAC3BC,IAAI,CAACC,GAAG,CAAC,GAAG,GAAGD,IAAI,CAACS,KAAK,CAAC,CAACV,aAAa,GAAG,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,GAC3D,GAAG;YAETH,UAAU,CAACW,GAAG,CAACH,GAAG,EAAE,OAAOM,GAAG,IAAIF,KAAK,KAAK,CAAC;UACjD;QACJ;QACA,OAAOZ,UAAU,CAACe,GAAG,CAACP,GAAG,CAAC;MAC9B,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,OAAO,kBAAkB,CAAC,CAAC;MAC/B;IACJ,CAAC;EACL,CAAC,EAAE;AACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}