{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rexrt\\\\Downloads\\\\hsenavrepo\\\\HseMaps\\\\src\\\\index.js\";\nimport { DataModule } from './modules/DataModule.js';\nimport { EventHandlingModule } from './modules/EventHandlingModule.js';\nimport { StreetViewModule } from './modules/StreetViewModule.js';\nimport { UtilityModule } from './modules/UtilityModule.js';\nimport React from 'react'; // Import React from 'react' (no need to specify node_modules)\nimport './index.css';\nimport ReactDOM from 'react-dom/client'; // Same for react-dom/client\nimport App from '../src/App'; // Correct path to the App component\nimport { PublicClientApplication } from '@azure/msal-browser'; // Use the package name directly\nimport { MsalProvider } from '@azure/msal-react'; // Same here\nimport { msalConfig } from '../src/Auth/authConfig'; // Adjust the path if necessary\n\n// Initialize application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n(async () => {\n  try {\n    await DataModule.initialize();\n\n    // Expose necessary functions to global scope\n    Object.assign(window, {\n      markShortestPathFromInput: EventHandlingModule.markShortestPathFromInput,\n      navSchedule: EventHandlingModule.navSchedule,\n      updateAgent: UtilityModule.updateAgent,\n      getImg: StreetViewModule.getImg\n    });\n    window.addEventListener('resize', UtilityModule.configureScroll);\n  } catch (error) {\n    console.error('Application initialization failed:', error);\n  }\n})();\n\n//########################################################################################################\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n// Assuming you have an element with id 'root' in your public/index.html file\n\nlet root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(MsalProvider, {\n    instance: msalInstance,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["DataModule","EventHandlingModule","StreetViewModule","UtilityModule","React","ReactDOM","App","PublicClientApplication","MsalProvider","msalConfig","jsxDEV","_jsxDEV","initialize","Object","assign","window","markShortestPathFromInput","navSchedule","updateAgent","getImg","addEventListener","configureScroll","error","console","msalInstance","root","createRoot","document","getElementById","render","StrictMode","children","instance","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/index.js"],"sourcesContent":["import { DataModule } from './modules/DataModule.js';\r\nimport { EventHandlingModule } from './modules/EventHandlingModule.js';\r\nimport { StreetViewModule } from './modules/StreetViewModule.js';\r\nimport { UtilityModule } from './modules/UtilityModule.js';\r\nimport React from 'react';  // Import React from 'react' (no need to specify node_modules)\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom/client';  // Same for react-dom/client\r\nimport App from '../src/App';  // Correct path to the App component\r\nimport { PublicClientApplication } from '@azure/msal-browser';  // Use the package name directly\r\nimport { MsalProvider } from '@azure/msal-react';  // Same here\r\nimport { msalConfig } from '../src/Auth/authConfig';  // Adjust the path if necessary\r\n\r\n// Initialize application\r\n(async () => {\r\n    try {\r\n        await DataModule.initialize();\r\n        \r\n        // Expose necessary functions to global scope\r\n        Object.assign(window, {\r\n            markShortestPathFromInput: EventHandlingModule.markShortestPathFromInput,\r\n            navSchedule: EventHandlingModule.navSchedule,\r\n            updateAgent: UtilityModule.updateAgent,\r\n            getImg: StreetViewModule.getImg\r\n        });\r\n        \r\n        window.addEventListener('resize', UtilityModule.configureScroll);\r\n    } catch (error) {\r\n        console.error('Application initialization failed:', error);\r\n    }\r\n})();\r\n\r\n//########################################################################################################\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\n// Assuming you have an element with id 'root' in your public/index.html file\r\n\r\nlet root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <MsalProvider instance={msalInstance}>\r\n      <App />\r\n    </MsalProvider>\r\n  </React.StrictMode>\r\n);"],"mappings":";AAAA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAE;AAC5B,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,kBAAkB,CAAC,CAAE;AAC1C,OAAOC,GAAG,MAAM,YAAY,CAAC,CAAE;AAC/B,SAASC,uBAAuB,QAAQ,qBAAqB,CAAC,CAAE;AAChE,SAASC,YAAY,QAAQ,mBAAmB,CAAC,CAAE;AACnD,SAASC,UAAU,QAAQ,wBAAwB,CAAC,CAAE;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,CAAC,YAAY;EACT,IAAI;IACA,MAAMX,UAAU,CAACY,UAAU,CAAC,CAAC;;IAE7B;IACAC,MAAM,CAACC,MAAM,CAACC,MAAM,EAAE;MAClBC,yBAAyB,EAAEf,mBAAmB,CAACe,yBAAyB;MACxEC,WAAW,EAAEhB,mBAAmB,CAACgB,WAAW;MAC5CC,WAAW,EAAEf,aAAa,CAACe,WAAW;MACtCC,MAAM,EAAEjB,gBAAgB,CAACiB;IAC7B,CAAC,CAAC;IAEFJ,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAEjB,aAAa,CAACkB,eAAe,CAAC;EACpE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;EAC9D;AACJ,CAAC,EAAE,CAAC;;AAEJ;;AAEA,MAAME,YAAY,GAAG,IAAIjB,uBAAuB,CAACE,UAAU,CAAC;;AAE5D;;AAEA,IAAIgB,IAAI,GAAGpB,QAAQ,CAACqB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAC/DH,IAAI,CAACI,MAAM,cACTlB,OAAA,CAACP,KAAK,CAAC0B,UAAU;EAAAC,QAAA,eACfpB,OAAA,CAACH,YAAY;IAACwB,QAAQ,EAAER,YAAa;IAAAO,QAAA,eACnCpB,OAAA,CAACL,GAAG;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}