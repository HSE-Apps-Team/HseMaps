{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rexrt\\\\Downloads\\\\hsenavrepo\\\\HseMaps\\\\src\\\\modules\\\\StateManager.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\n\n/**\r\n * @module StateManager\r\n * @description Manages global application state with data validation using a Proxy pattern.\r\n * Provides centralized state management with validation rules for critical path properties.\r\n */\n\n/**\r\n * @type {Object.<string, function>}\r\n * @description Validation functions for state properties\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validators = {\n  path: value => Array.isArray(value),\n  totalDistance: value => typeof value === 'number' && value >= 0,\n  currentPathSegment: value => value === null || typeof value === 'number' && value >= 0\n};\nconst initialState = {\n  totalDistance: 0,\n  firstPathRendered: true,\n  secondPathRendered: false,\n  currentFloor: 'main',\n  path: [],\n  distanceDomain: [],\n  currentPathSegment: null,\n  maskedImages: null\n};\nconst StateContext = /*#__PURE__*/createContext(initialState);\nexport const StateProvider = ({\n  children\n}) => {\n  _s();\n  const [state, setState] = useState(initialState);\n  const updateState = (key, value) => {\n    setState(prev => ({\n      ...prev,\n      [key]: value,\n      ...(key === 'secondPathRendered' && {\n        currentFloor: value ? 'second' : 'main'\n      })\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      state,\n      updateState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(StateProvider, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n_c = StateProvider;\nexport const useStateManager = () => {\n  _s2();\n  const context = useContext(StateContext);\n  if (!context) {\n    throw new Error('useStateManager must be used within StateProvider');\n  }\n  return context;\n};\n_s2(useStateManager, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","validators","path","value","Array","isArray","totalDistance","currentPathSegment","initialState","firstPathRendered","secondPathRendered","currentFloor","distanceDomain","maskedImages","StateContext","StateProvider","children","_s","state","setState","updateState","key","prev","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStateManager","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/StateManager.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\n/**\r\n * @module StateManager\r\n * @description Manages global application state with data validation using a Proxy pattern.\r\n * Provides centralized state management with validation rules for critical path properties.\r\n */\r\n\r\n/**\r\n * @type {Object.<string, function>}\r\n * @description Validation functions for state properties\r\n */\r\nconst validators = {\r\n    path: value => Array.isArray(value),\r\n    totalDistance: value => typeof value === 'number' && value >= 0,\r\n    currentPathSegment: value => value === null || (typeof value === 'number' && value >= 0)\r\n};\r\n\r\nconst initialState = {\r\n    totalDistance: 0,\r\n    firstPathRendered: true,\r\n    secondPathRendered: false,\r\n    currentFloor: 'main',\r\n    path: [],\r\n    distanceDomain: [],\r\n    currentPathSegment: null,\r\n    maskedImages: null\r\n};\r\n\r\nconst StateContext = createContext(initialState);\r\n\r\nexport const StateProvider = ({ children }) => {\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const updateState = (key, value) => {\r\n        setState(prev => ({\r\n            ...prev,\r\n            [key]: value,\r\n            ...(key === 'secondPathRendered' && {\r\n                currentFloor: value ? 'second' : 'main'\r\n            })\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <StateContext.Provider value={{ state, updateState }}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useStateManager = () => {\r\n    const context = useContext(StateContext);\r\n    if (!context) {\r\n        throw new Error('useStateManager must be used within StateProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAE3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,UAAU,GAAG;EACfC,IAAI,EAAEC,KAAK,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC;EACnCG,aAAa,EAAEH,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAI,CAAC;EAC/DI,kBAAkB,EAAEJ,KAAK,IAAIA,KAAK,KAAK,IAAI,IAAK,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAI;AAC1F,CAAC;AAED,MAAMK,YAAY,GAAG;EACjBF,aAAa,EAAE,CAAC;EAChBG,iBAAiB,EAAE,IAAI;EACvBC,kBAAkB,EAAE,KAAK;EACzBC,YAAY,EAAE,MAAM;EACpBT,IAAI,EAAE,EAAE;EACRU,cAAc,EAAE,EAAE;EAClBL,kBAAkB,EAAE,IAAI;EACxBM,YAAY,EAAE;AAClB,CAAC;AAED,MAAMC,YAAY,gBAAGlB,aAAa,CAACY,YAAY,CAAC;AAEhD,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAACU,YAAY,CAAC;EAEhD,MAAMY,WAAW,GAAGA,CAACC,GAAG,EAAElB,KAAK,KAAK;IAChCgB,QAAQ,CAACG,IAAI,KAAK;MACd,GAAGA,IAAI;MACP,CAACD,GAAG,GAAGlB,KAAK;MACZ,IAAIkB,GAAG,KAAK,oBAAoB,IAAI;QAChCV,YAAY,EAAER,KAAK,GAAG,QAAQ,GAAG;MACrC,CAAC;IACL,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACIH,OAAA,CAACc,YAAY,CAACS,QAAQ;IAACpB,KAAK,EAAE;MAAEe,KAAK;MAAEE;IAAY,CAAE;IAAAJ,QAAA,EAChDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACV,EAAA,CAlBWF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAoB1B,OAAO,MAAMc,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,MAAMC,OAAO,GAAGlC,UAAU,CAACiB,YAAY,CAAC;EACxC,IAAI,CAACiB,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACxE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,eAAe;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}