{"ast":null,"code":"import{DataModule}from'./modules/DataModule.js';import{EventHandlingModule}from'./modules/EventHandlingModule.js';import{StreetViewModule}from'./modules/StreetViewModule.js';import{UtilityModule}from'./modules/UtilityModule.js';import React from'react';// Import React from 'react' (no need to specify node_modules)\nimport ReactDOM from'react-dom/client';// Same for react-dom/client\nimport App from'../src/App';// Correct path to the App component\nimport{PublicClientApplication}from'@azure/msal-browser';// Use the package name directly\nimport{MsalProvider}from'@azure/msal-react';// Same here\nimport{msalConfig}from'../src/Auth/authConfig';// Adjust the path if necessary\n// Initialize application\nimport{jsx as _jsx}from\"react/jsx-runtime\";(async()=>{try{await DataModule.initialize();// Expose necessary functions to global scope\nObject.assign(window,{markShortestPathFromInput:EventHandlingModule.markShortestPathFromInput,navSchedule:EventHandlingModule.navSchedule,updateAgent:UtilityModule.updateAgent,getImg:StreetViewModule.getImg});window.addEventListener('resize',UtilityModule.configureScroll);}catch(error){console.error('Application initialization failed:',error);}})();//########################################################################################################\nconst msalInstance=new PublicClientApplication(msalConfig);// Assuming you have an element with id 'root' in your public/index.html file\nlet root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(MsalProvider,{instance:msalInstance,children:/*#__PURE__*/_jsx(App,{})})}));","map":{"version":3,"names":["DataModule","EventHandlingModule","StreetViewModule","UtilityModule","React","ReactDOM","App","PublicClientApplication","MsalProvider","msalConfig","jsx","_jsx","initialize","Object","assign","window","markShortestPathFromInput","navSchedule","updateAgent","getImg","addEventListener","configureScroll","error","console","msalInstance","root","createRoot","document","getElementById","render","StrictMode","children","instance"],"sources":["C:/Users/ampri/OneDrive/Documents/HseMaps/HseMaps/src/index.js"],"sourcesContent":["import { DataModule } from './modules/DataModule.js';\r\nimport { EventHandlingModule } from './modules/EventHandlingModule.js';\r\nimport { StreetViewModule } from './modules/StreetViewModule.js';\r\nimport { UtilityModule } from './modules/UtilityModule.js';\r\nimport React from 'react';  // Import React from 'react' (no need to specify node_modules)\r\nimport ReactDOM from 'react-dom/client';  // Same for react-dom/client\r\nimport App from '../src/App';  // Correct path to the App component\r\n\r\nimport { PublicClientApplication } from '@azure/msal-browser';  // Use the package name directly\r\nimport { MsalProvider } from '@azure/msal-react';  // Same here\r\nimport { msalConfig } from '../src/Auth/authConfig';  // Adjust the path if necessary\r\n\r\n// Initialize application\r\n(async () => {\r\n    try {\r\n        await DataModule.initialize();\r\n        \r\n        // Expose necessary functions to global scope\r\n        Object.assign(window, {\r\n            markShortestPathFromInput: EventHandlingModule.markShortestPathFromInput,\r\n            navSchedule: EventHandlingModule.navSchedule,\r\n            updateAgent: UtilityModule.updateAgent,\r\n            getImg: StreetViewModule.getImg\r\n        });\r\n        \r\n        window.addEventListener('resize', UtilityModule.configureScroll);\r\n    } catch (error) {\r\n        console.error('Application initialization failed:', error);\r\n    }\r\n})();\r\n\r\n//########################################################################################################\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\n// Assuming you have an element with id 'root' in your public/index.html file\r\n\r\nlet root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <MsalProvider instance={msalInstance}>\r\n      <App />\r\n    </MsalProvider>\r\n  </React.StrictMode>\r\n);"],"mappings":"AAAA,OAASA,UAAU,KAAQ,yBAAyB,CACpD,OAASC,mBAAmB,KAAQ,kCAAkC,CACtE,OAASC,gBAAgB,KAAQ,+BAA+B,CAChE,OAASC,aAAa,KAAQ,4BAA4B,CAC1D,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAG;AAC5B,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CAAG;AAC1C,MAAO,CAAAC,GAAG,KAAM,YAAY,CAAG;AAE/B,OAASC,uBAAuB,KAAQ,qBAAqB,CAAG;AAChE,OAASC,YAAY,KAAQ,mBAAmB,CAAG;AACnD,OAASC,UAAU,KAAQ,wBAAwB,CAAG;AAEtD;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,CAAC,SAAY,CACT,GAAI,CACA,KAAM,CAAAX,UAAU,CAACY,UAAU,CAAC,CAAC,CAE7B;AACAC,MAAM,CAACC,MAAM,CAACC,MAAM,CAAE,CAClBC,yBAAyB,CAAEf,mBAAmB,CAACe,yBAAyB,CACxEC,WAAW,CAAEhB,mBAAmB,CAACgB,WAAW,CAC5CC,WAAW,CAAEf,aAAa,CAACe,WAAW,CACtCC,MAAM,CAAEjB,gBAAgB,CAACiB,MAC7B,CAAC,CAAC,CAEFJ,MAAM,CAACK,gBAAgB,CAAC,QAAQ,CAAEjB,aAAa,CAACkB,eAAe,CAAC,CACpE,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC9D,CACJ,CAAC,EAAE,CAAC,CAEJ;AAEA,KAAM,CAAAE,YAAY,CAAG,GAAI,CAAAjB,uBAAuB,CAACE,UAAU,CAAC,CAE5D;AAEA,GAAI,CAAAgB,IAAI,CAAGpB,QAAQ,CAACqB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAC/DH,IAAI,CAACI,MAAM,cACTlB,IAAA,CAACP,KAAK,CAAC0B,UAAU,EAAAC,QAAA,cACfpB,IAAA,CAACH,YAAY,EAACwB,QAAQ,CAAER,YAAa,CAAAO,QAAA,cACnCpB,IAAA,CAACL,GAAG,GAAE,CAAC,CACK,CAAC,CACC,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}