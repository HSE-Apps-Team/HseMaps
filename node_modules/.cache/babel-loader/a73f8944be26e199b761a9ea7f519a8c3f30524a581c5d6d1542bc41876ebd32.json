{"ast":null,"code":"/**\r\n * @module ScheduleManager\r\n * @description Manages the storage and retrieval of room schedules by day.\r\n * Handles deduplication and persistence of schedule data in localStorage.\r\n */\n\nexport const ScheduleManager = {\n  /**\r\n   * @function save\r\n   * @param {string} day - The day identifier for the schedule\r\n   * @param {string[]} rooms - Array of room identifiers\r\n   * @returns {string[]} Array of unique room identifiers\r\n   * @throws {Error} If day is invalid or rooms is not an array\r\n   * @description Saves a daily schedule of rooms with automatic deduplication\r\n   */\n  save(day, rooms) {\n    if (!day || !Array.isArray(rooms)) return [];\n    const uniqueRooms = [...new Set(rooms)];\n    localStorage.setItem(`schedule_${day}`, JSON.stringify(uniqueRooms));\n    return uniqueRooms;\n  },\n  /**\r\n   * @function load\r\n   * @param {string} day - The day identifier to load the schedule for\r\n   * @returns {string[]} Array of room identifiers, empty if none found\r\n   * @description Loads and deduplicates a daily schedule from storage\r\n   */\n  load(day) {\n    const schedule = localStorage.getItem(`schedule_${day}`);\n    if (!schedule) return [];\n    const rooms = JSON.parse(schedule);\n    return [...new Set(rooms)];\n  },\n  /**\r\n   * @function notifyUser\r\n   * @param {string} message - The notification message\r\n   * @description Dispatches a custom event for schedule-related notifications\r\n   */\n  notifyUser(message) {\n    window.dispatchEvent(new CustomEvent('schedule-notification', {\n      detail: {\n        message\n      }\n    }));\n  }\n};","map":{"version":3,"names":["ScheduleManager","save","day","rooms","Array","isArray","uniqueRooms","Set","localStorage","setItem","JSON","stringify","load","schedule","getItem","parse","notifyUser","message","window","dispatchEvent","CustomEvent","detail"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/ScheduleManager.js"],"sourcesContent":["/**\r\n * @module ScheduleManager\r\n * @description Manages the storage and retrieval of room schedules by day.\r\n * Handles deduplication and persistence of schedule data in localStorage.\r\n */\r\n\r\nexport const ScheduleManager = {\r\n    /**\r\n     * @function save\r\n     * @param {string} day - The day identifier for the schedule\r\n     * @param {string[]} rooms - Array of room identifiers\r\n     * @returns {string[]} Array of unique room identifiers\r\n     * @throws {Error} If day is invalid or rooms is not an array\r\n     * @description Saves a daily schedule of rooms with automatic deduplication\r\n     */\r\n    save(day, rooms) {\r\n        if (!day || !Array.isArray(rooms)) return [];\r\n        const uniqueRooms = [...new Set(rooms)];\r\n        localStorage.setItem(`schedule_${day}`, JSON.stringify(uniqueRooms));\r\n        return uniqueRooms;\r\n    },\r\n\r\n    /**\r\n     * @function load\r\n     * @param {string} day - The day identifier to load the schedule for\r\n     * @returns {string[]} Array of room identifiers, empty if none found\r\n     * @description Loads and deduplicates a daily schedule from storage\r\n     */\r\n    load(day) {\r\n        const schedule = localStorage.getItem(`schedule_${day}`);\r\n        if (!schedule) return [];\r\n        const rooms = JSON.parse(schedule);\r\n        return [...new Set(rooms)];\r\n    },\r\n\r\n    /**\r\n     * @function notifyUser\r\n     * @param {string} message - The notification message\r\n     * @description Dispatches a custom event for schedule-related notifications\r\n     */\r\n    notifyUser(message) {\r\n        window.dispatchEvent(new CustomEvent('schedule-notification', {\r\n            detail: { message }\r\n        }));\r\n    }\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,eAAe,GAAG;EAC3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,IAAIA,CAACC,GAAG,EAAEC,KAAK,EAAE;IACb,IAAI,CAACD,GAAG,IAAI,CAACE,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE,OAAO,EAAE;IAC5C,MAAMG,WAAW,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACJ,KAAK,CAAC,CAAC;IACvCK,YAAY,CAACC,OAAO,CAAC,YAAYP,GAAG,EAAE,EAAEQ,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC,CAAC;IACpE,OAAOA,WAAW;EACtB,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIM,IAAIA,CAACV,GAAG,EAAE;IACN,MAAMW,QAAQ,GAAGL,YAAY,CAACM,OAAO,CAAC,YAAYZ,GAAG,EAAE,CAAC;IACxD,IAAI,CAACW,QAAQ,EAAE,OAAO,EAAE;IACxB,MAAMV,KAAK,GAAGO,IAAI,CAACK,KAAK,CAACF,QAAQ,CAAC;IAClC,OAAO,CAAC,GAAG,IAAIN,GAAG,CAACJ,KAAK,CAAC,CAAC;EAC9B,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIa,UAAUA,CAACC,OAAO,EAAE;IAChBC,MAAM,CAACC,aAAa,CAAC,IAAIC,WAAW,CAAC,uBAAuB,EAAE;MAC1DC,MAAM,EAAE;QAAEJ;MAAQ;IACtB,CAAC,CAAC,CAAC;EACP;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}