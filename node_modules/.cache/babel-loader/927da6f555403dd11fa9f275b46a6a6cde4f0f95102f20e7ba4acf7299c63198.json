{"ast":null,"code":"/**\r\n * @module StateManager\r\n * @description Manages global application state with data validation using a Proxy pattern.\r\n * Provides centralized state management with validation rules for critical path properties.\r\n */\n\n/**\r\n * @type {Object.<string, function>}\r\n * @description Validation functions for state properties\r\n */\nconst validators = {\n  path: value => Array.isArray(value),\n  totalDistance: value => typeof value === 'number' && value >= 0,\n  currentPathSegment: value => value === null || typeof value === 'number' && value >= 0\n};\n\n/**\r\n * @type {Object}\r\n * @description Proxy-wrapped state object with validation and automatic floor management\r\n */\nexport const StateManager = (() => {\n  const state = new Proxy({\n    totalDistance: 0,\n    firstPathRendered: true,\n    secondPathRendered: false,\n    currentFloor: 'main',\n    skipStart: () => true,\n    skipEnd: () => false,\n    onPathStart: () => {},\n    onPathEnd: () => {},\n    iterator: 1,\n    path: [],\n    distanceDomain: [],\n    currentPathSegment: null,\n    maskedImages: null\n  }, {\n    set(target, key, value) {\n      if (validators[key] && !validators[key](value)) {\n        console.warn(`Invalid value for ${key}`);\n        return false;\n      }\n      target[key] = value;\n      if (key === 'secondPathRendered') {\n        target.currentFloor = value ? 'second' : 'main';\n      }\n      return true;\n    }\n  });\n  return {\n    get: key => key ? state[key] : state,\n    set: (key, value) => {\n      state[key] = value;\n    }\n  };\n})();","map":{"version":3,"names":["validators","path","value","Array","isArray","totalDistance","currentPathSegment","StateManager","state","Proxy","firstPathRendered","secondPathRendered","currentFloor","skipStart","skipEnd","onPathStart","onPathEnd","iterator","distanceDomain","maskedImages","set","target","key","console","warn","get"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/StateManager.js"],"sourcesContent":["/**\r\n * @module StateManager\r\n * @description Manages global application state with data validation using a Proxy pattern.\r\n * Provides centralized state management with validation rules for critical path properties.\r\n */\r\n\r\n/**\r\n * @type {Object.<string, function>}\r\n * @description Validation functions for state properties\r\n */\r\nconst validators = {\r\n    path: value => Array.isArray(value),\r\n    totalDistance: value => typeof value === 'number' && value >= 0,\r\n    currentPathSegment: value => value === null || (typeof value === 'number' && value >= 0)\r\n};\r\n\r\n/**\r\n * @type {Object}\r\n * @description Proxy-wrapped state object with validation and automatic floor management\r\n */\r\nexport const StateManager = (() => {\r\n    const state = new Proxy({\r\n        totalDistance: 0,\r\n        firstPathRendered: true,\r\n        secondPathRendered: false,\r\n        currentFloor: 'main',\r\n        skipStart: () => true,\r\n        skipEnd: () => false,\r\n        onPathStart: () => {},\r\n        onPathEnd: () => {},\r\n        iterator: 1,\r\n        path: [],\r\n        distanceDomain: [],\r\n        currentPathSegment: null,\r\n        maskedImages: null\r\n    }, {\r\n        set(target, key, value) {\r\n            if (validators[key] && !validators[key](value)) {\r\n                console.warn(`Invalid value for ${key}`);\r\n                return false;\r\n            }\r\n            target[key] = value;\r\n            if (key === 'secondPathRendered') {\r\n                target.currentFloor = value ? 'second' : 'main';\r\n            }\r\n            return true;\r\n        }\r\n    });\r\n\r\n    return {\r\n        get: key => key ? state[key] : state,\r\n        set: (key, value) => { state[key] = value; }\r\n    };\r\n})();"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAMA,UAAU,GAAG;EACfC,IAAI,EAAEC,KAAK,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC;EACnCG,aAAa,EAAEH,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAI,CAAC;EAC/DI,kBAAkB,EAAEJ,KAAK,IAAIA,KAAK,KAAK,IAAI,IAAK,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAI;AAC1F,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMK,YAAY,GAAG,CAAC,MAAM;EAC/B,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC;IACpBJ,aAAa,EAAE,CAAC;IAChBK,iBAAiB,EAAE,IAAI;IACvBC,kBAAkB,EAAE,KAAK;IACzBC,YAAY,EAAE,MAAM;IACpBC,SAAS,EAAEA,CAAA,KAAM,IAAI;IACrBC,OAAO,EAAEA,CAAA,KAAM,KAAK;IACpBC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;IACrBC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;IACnBC,QAAQ,EAAE,CAAC;IACXhB,IAAI,EAAE,EAAE;IACRiB,cAAc,EAAE,EAAE;IAClBZ,kBAAkB,EAAE,IAAI;IACxBa,YAAY,EAAE;EAClB,CAAC,EAAE;IACCC,GAAGA,CAACC,MAAM,EAAEC,GAAG,EAAEpB,KAAK,EAAE;MACpB,IAAIF,UAAU,CAACsB,GAAG,CAAC,IAAI,CAACtB,UAAU,CAACsB,GAAG,CAAC,CAACpB,KAAK,CAAC,EAAE;QAC5CqB,OAAO,CAACC,IAAI,CAAC,qBAAqBF,GAAG,EAAE,CAAC;QACxC,OAAO,KAAK;MAChB;MACAD,MAAM,CAACC,GAAG,CAAC,GAAGpB,KAAK;MACnB,IAAIoB,GAAG,KAAK,oBAAoB,EAAE;QAC9BD,MAAM,CAACT,YAAY,GAAGV,KAAK,GAAG,QAAQ,GAAG,MAAM;MACnD;MACA,OAAO,IAAI;IACf;EACJ,CAAC,CAAC;EAEF,OAAO;IACHuB,GAAG,EAAEH,GAAG,IAAIA,GAAG,GAAGd,KAAK,CAACc,GAAG,CAAC,GAAGd,KAAK;IACpCY,GAAG,EAAEA,CAACE,GAAG,EAAEpB,KAAK,KAAK;MAAEM,KAAK,CAACc,GAAG,CAAC,GAAGpB,KAAK;IAAE;EAC/C,CAAC;AACL,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}