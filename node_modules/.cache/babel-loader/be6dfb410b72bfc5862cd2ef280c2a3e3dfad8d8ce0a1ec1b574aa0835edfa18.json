{"ast":null,"code":"import{StateManager}from'./StateManager.js';import{RenderingModule}from'./RenderingModule.js';import{UtilityModule}from'./UtilityModule.js';import{DOMCache}from'./DOMCache.js';import{Config}from'../config/config.js';/**\r\n * EventHandlingModule - Manages UI event handling and synchronization\r\n * Coordinates scroll position, slider value, and agent movement\r\n * \r\n * @module EventHandlingModule\r\n */export const EventHandlingModule={markShortestPathFromInput(){RenderingModule.refresh();DOMCache[Config.SVG.SELECTORS.PROGBAR].value=0;DOMCache[Config.SVG.SELECTORS.SCROLL].scrollTop=0;const start=document.getElementById(\"start\").value.toUpperCase();const end=document.getElementById(\"end\").value.toUpperCase();UtilityModule.markShortestPath(start,end);UtilityModule.configureScroll();},/**\r\n     * Handles navigation through schedule waypoints\r\n     * Updates input fields and triggers path calculation\r\n     * \r\n     * @example\r\n     * // Given schedule input \"ROOM101,ROOM102,ROOM103\"\r\n     * navSchedule()  \r\n     * // Sets start=\"ROOM101\", end=\"ROOM102\"\r\n     * // Next call sets start=\"ROOM102\", end=\"ROOM103\"\r\n     * // Next call resets to beginning\r\n     */navSchedule(){RenderingModule.refresh();const sched=document.getElementById(\"sched\");const classes=sched.value.split(\",\");const iterator=StateManager.get('iterator');const from=classes[iterator-1];const to=classes[iterator];document.getElementById(\"start\").value=from;document.getElementById(\"end\").value=to;this.markShortestPathFromInput();StateManager.set('iterator',iterator+1);if(iterator===classes.length-1)StateManager.set('iterator',1);},/**\r\n     * Synchronizes scroll position with slider value and updates agent\r\n     * Called on scroll events to maintain visual synchronization\r\n     * \r\n     * @example Input/Output\r\n     * // When user scrolls to position 150:\r\n     * // scroll.scrollTop = 150\r\n     * // -> sets slider.value = 150\r\n     * // -> triggers agent update at position 150\r\n     * \r\n     * @example Usage\r\n     * const scroll = document.getElementById(\"scroll\");\r\n     * scroll.scrollTop = 100;\r\n     * updateSliderValue();\r\n     * // Results in:\r\n     * // - slider.value = 100\r\n     * // - agent position updated to 100\r\n     */updateSliderValue(){const slider=DOMCache[Config.SVG.SELECTORS.PROGBAR];const scroll=DOMCache[Config.SVG.SELECTORS.SCROLL];// Update slider value from scroll position\nslider.value=scroll.scrollTop;// Update agent position\nUtilityModule.updateAgent();}};/**\r\n * Event Bindings\r\n * Connects DOM events to handler functions\r\n * \r\n * @example Scroll Event\r\n * // When user scrolls the container:\r\n * scroll.onscroll -> updateSliderValue() -> UtilityModule.updateAgent()\r\n * \r\n * @example Slider Input\r\n * // When user moves the slider:\r\n * progbar.oninput -> UtilityModule.updateAgent()\r\n */// Direct scroll event binding\ndocument.getElementById(\"scroll\").onscroll=()=>EventHandlingModule.updateSliderValue();// Direct slider input binding\ndocument.getElementById(\"progbar\").oninput=()=>UtilityModule.updateAgent();/**\r\n * Updates the body's data-theme attribute based on the selected theme\r\n * \r\n * @example\r\n * // When user selects \"dark\" from the theme dropdown:\r\n * // themeDropdown.value = \"dark\"\r\n * // -> sets document.body.dataset.theme = \"dark\"\r\n */function updateTheme(){const themeDropdown=document.getElementById(\"theme-dropdown\");const selectedTheme=themeDropdown.value;document.body.dataset.theme=selectedTheme;}// Bind theme dropdown change event to updateTheme function\ndocument.getElementById(\"theme-dropdown\").onchange=updateTheme;","map":{"version":3,"names":["StateManager","RenderingModule","UtilityModule","DOMCache","Config","EventHandlingModule","markShortestPathFromInput","refresh","SVG","SELECTORS","PROGBAR","value","SCROLL","scrollTop","start","document","getElementById","toUpperCase","end","markShortestPath","configureScroll","navSchedule","sched","classes","split","iterator","get","from","to","set","length","updateSliderValue","slider","scroll","updateAgent","onscroll","oninput","updateTheme","themeDropdown","selectedTheme","body","dataset","theme","onchange"],"sources":["C:/Users/ampri/OneDrive/Documents/HseMaps/HseMaps/src/modules/EventHandlingModule.js"],"sourcesContent":["import { StateManager } from './StateManager.js';\r\nimport { RenderingModule } from './RenderingModule.js';\r\nimport { UtilityModule } from './UtilityModule.js';\r\nimport { DOMCache } from './DOMCache.js';\r\nimport { Config } from '../config/config.js';\r\n\r\n/**\r\n * EventHandlingModule - Manages UI event handling and synchronization\r\n * Coordinates scroll position, slider value, and agent movement\r\n * \r\n * @module EventHandlingModule\r\n */\r\nexport const EventHandlingModule = {\r\n    markShortestPathFromInput() {\r\n        RenderingModule.refresh();\r\n        DOMCache[Config.SVG.SELECTORS.PROGBAR].value = 0;\r\n        DOMCache[Config.SVG.SELECTORS.SCROLL].scrollTop = 0;\r\n        const start = document.getElementById(\"start\").value.toUpperCase();\r\n        const end = document.getElementById(\"end\").value.toUpperCase();\r\n        UtilityModule.markShortestPath(start, end);\r\n        UtilityModule.configureScroll();\r\n    },\r\n\r\n    /**\r\n     * Handles navigation through schedule waypoints\r\n     * Updates input fields and triggers path calculation\r\n     * \r\n     * @example\r\n     * // Given schedule input \"ROOM101,ROOM102,ROOM103\"\r\n     * navSchedule()  \r\n     * // Sets start=\"ROOM101\", end=\"ROOM102\"\r\n     * // Next call sets start=\"ROOM102\", end=\"ROOM103\"\r\n     * // Next call resets to beginning\r\n     */\r\n    navSchedule() {\r\n        RenderingModule.refresh();\r\n        const sched = document.getElementById(\"sched\");\r\n        const classes = sched.value.split(\",\");\r\n        const iterator = StateManager.get('iterator');\r\n        const from = classes[iterator - 1];\r\n        const to = classes[iterator];\r\n        document.getElementById(\"start\").value = from;\r\n        document.getElementById(\"end\").value = to;\r\n        this.markShortestPathFromInput();\r\n        StateManager.set('iterator', iterator + 1);\r\n        if (iterator === classes.length - 1) StateManager.set('iterator', 1);\r\n    },\r\n\r\n    /**\r\n     * Synchronizes scroll position with slider value and updates agent\r\n     * Called on scroll events to maintain visual synchronization\r\n     * \r\n     * @example Input/Output\r\n     * // When user scrolls to position 150:\r\n     * // scroll.scrollTop = 150\r\n     * // -> sets slider.value = 150\r\n     * // -> triggers agent update at position 150\r\n     * \r\n     * @example Usage\r\n     * const scroll = document.getElementById(\"scroll\");\r\n     * scroll.scrollTop = 100;\r\n     * updateSliderValue();\r\n     * // Results in:\r\n     * // - slider.value = 100\r\n     * // - agent position updated to 100\r\n     */\r\n    updateSliderValue() {\r\n        const slider = DOMCache[Config.SVG.SELECTORS.PROGBAR];\r\n        const scroll = DOMCache[Config.SVG.SELECTORS.SCROLL];\r\n        \r\n        // Update slider value from scroll position\r\n        slider.value = scroll.scrollTop;\r\n        \r\n        // Update agent position\r\n        UtilityModule.updateAgent();\r\n    }\r\n};\r\n\r\n/**\r\n * Event Bindings\r\n * Connects DOM events to handler functions\r\n * \r\n * @example Scroll Event\r\n * // When user scrolls the container:\r\n * scroll.onscroll -> updateSliderValue() -> UtilityModule.updateAgent()\r\n * \r\n * @example Slider Input\r\n * // When user moves the slider:\r\n * progbar.oninput -> UtilityModule.updateAgent()\r\n */\r\n\r\n// Direct scroll event binding\r\ndocument.getElementById(\"scroll\").onscroll = () => EventHandlingModule.updateSliderValue();\r\n\r\n// Direct slider input binding\r\ndocument.getElementById(\"progbar\").oninput = () => UtilityModule.updateAgent();\r\n\r\n/**\r\n * Updates the body's data-theme attribute based on the selected theme\r\n * \r\n * @example\r\n * // When user selects \"dark\" from the theme dropdown:\r\n * // themeDropdown.value = \"dark\"\r\n * // -> sets document.body.dataset.theme = \"dark\"\r\n */\r\nfunction updateTheme() {\r\n    const themeDropdown = document.getElementById(\"theme-dropdown\");\r\n    const selectedTheme = themeDropdown.value;\r\n    document.body.dataset.theme = selectedTheme;\r\n}\r\n\r\n// Bind theme dropdown change event to updateTheme function\r\ndocument.getElementById(\"theme-dropdown\").onchange = updateTheme;"],"mappings":"AAAA,OAASA,YAAY,KAAQ,mBAAmB,CAChD,OAASC,eAAe,KAAQ,sBAAsB,CACtD,OAASC,aAAa,KAAQ,oBAAoB,CAClD,OAASC,QAAQ,KAAQ,eAAe,CACxC,OAASC,MAAM,KAAQ,qBAAqB,CAE5C;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,mBAAmB,CAAG,CAC/BC,yBAAyBA,CAAA,CAAG,CACxBL,eAAe,CAACM,OAAO,CAAC,CAAC,CACzBJ,QAAQ,CAACC,MAAM,CAACI,GAAG,CAACC,SAAS,CAACC,OAAO,CAAC,CAACC,KAAK,CAAG,CAAC,CAChDR,QAAQ,CAACC,MAAM,CAACI,GAAG,CAACC,SAAS,CAACG,MAAM,CAAC,CAACC,SAAS,CAAG,CAAC,CACnD,KAAM,CAAAC,KAAK,CAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACL,KAAK,CAACM,WAAW,CAAC,CAAC,CAClE,KAAM,CAAAC,GAAG,CAAGH,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACL,KAAK,CAACM,WAAW,CAAC,CAAC,CAC9Df,aAAa,CAACiB,gBAAgB,CAACL,KAAK,CAAEI,GAAG,CAAC,CAC1ChB,aAAa,CAACkB,eAAe,CAAC,CAAC,CACnC,CAAC,CAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,WAAWA,CAAA,CAAG,CACVpB,eAAe,CAACM,OAAO,CAAC,CAAC,CACzB,KAAM,CAAAe,KAAK,CAAGP,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAC9C,KAAM,CAAAO,OAAO,CAAGD,KAAK,CAACX,KAAK,CAACa,KAAK,CAAC,GAAG,CAAC,CACtC,KAAM,CAAAC,QAAQ,CAAGzB,YAAY,CAAC0B,GAAG,CAAC,UAAU,CAAC,CAC7C,KAAM,CAAAC,IAAI,CAAGJ,OAAO,CAACE,QAAQ,CAAG,CAAC,CAAC,CAClC,KAAM,CAAAG,EAAE,CAAGL,OAAO,CAACE,QAAQ,CAAC,CAC5BV,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACL,KAAK,CAAGgB,IAAI,CAC7CZ,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACL,KAAK,CAAGiB,EAAE,CACzC,IAAI,CAACtB,yBAAyB,CAAC,CAAC,CAChCN,YAAY,CAAC6B,GAAG,CAAC,UAAU,CAAEJ,QAAQ,CAAG,CAAC,CAAC,CAC1C,GAAIA,QAAQ,GAAKF,OAAO,CAACO,MAAM,CAAG,CAAC,CAAE9B,YAAY,CAAC6B,GAAG,CAAC,UAAU,CAAE,CAAC,CAAC,CACxE,CAAC,CAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIE,iBAAiBA,CAAA,CAAG,CAChB,KAAM,CAAAC,MAAM,CAAG7B,QAAQ,CAACC,MAAM,CAACI,GAAG,CAACC,SAAS,CAACC,OAAO,CAAC,CACrD,KAAM,CAAAuB,MAAM,CAAG9B,QAAQ,CAACC,MAAM,CAACI,GAAG,CAACC,SAAS,CAACG,MAAM,CAAC,CAEpD;AACAoB,MAAM,CAACrB,KAAK,CAAGsB,MAAM,CAACpB,SAAS,CAE/B;AACAX,aAAa,CAACgC,WAAW,CAAC,CAAC,CAC/B,CACJ,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA;AACAnB,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACmB,QAAQ,CAAG,IAAM9B,mBAAmB,CAAC0B,iBAAiB,CAAC,CAAC,CAE1F;AACAhB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACoB,OAAO,CAAG,IAAMlC,aAAa,CAACgC,WAAW,CAAC,CAAC,CAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAG,WAAWA,CAAA,CAAG,CACnB,KAAM,CAAAC,aAAa,CAAGvB,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAC/D,KAAM,CAAAuB,aAAa,CAAGD,aAAa,CAAC3B,KAAK,CACzCI,QAAQ,CAACyB,IAAI,CAACC,OAAO,CAACC,KAAK,CAAGH,aAAa,CAC/C,CAEA;AACAxB,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAAC2B,QAAQ,CAAGN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}