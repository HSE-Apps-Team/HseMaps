{"ast":null,"code":"/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n * PLEASE EMAIL MRS. ALANO FOR \r\n */\nexport const msalConfig = {\n  auth: {\n    clientId: process.env.REACT_APP_AZURE_CLIENT_ID,\n    authority: process.env.REACT_APP_AZURE_AUTHORITY,\n    redirectUri: window.location.origin,\n    postLogoutRedirectUri: window.location.origin,\n    navigateToLoginRequestUrl: true,\n    storeAuthStateInCookie: true,\n    // Enable cookies for mobile IE\n    // Remove clientSecret - should never be in frontend code\n    cloudDiscoveryMetadata: '{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]}'\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // This configures where your cache will be stored\n    storeAuthStateInCookie: false // Set this to \"true\" if you are having issues on IE11 or Edge\n  },\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n          case LogLevel.Info:\n            //console.info(message);\n            return;\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n          default:\n            return;\n        }\n      }\n    }\n  }\n};\n\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\nexport const loginRequest = {\n  scopes: [\"user.read\"]\n};\n\n/**\r\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\nexport const graphConfig = {\n  scopes: [\"user.read\"]\n};","map":{"version":3,"names":["LogLevel","msalConfig","auth","clientId","process","env","REACT_APP_AZURE_CLIENT_ID","authority","REACT_APP_AZURE_AUTHORITY","redirectUri","window","location","origin","postLogoutRedirectUri","navigateToLoginRequestUrl","storeAuthStateInCookie","cloudDiscoveryMetadata","cache","cacheLocation","system","loggerOptions","loggerCallback","level","message","containsPii","Error","console","error","Info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/Auth/authConfig.js"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LogLevel } from \"@azure/msal-browser\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n * PLEASE EMAIL MRS. ALANO FOR \r\n */\r\nexport const msalConfig = {\r\n    auth: {\r\n        clientId: process.env.REACT_APP_AZURE_CLIENT_ID,\r\n        authority: process.env.REACT_APP_AZURE_AUTHORITY,\r\n        redirectUri: window.location.origin,\r\n        postLogoutRedirectUri: window.location.origin,\r\n        navigateToLoginRequestUrl: true,\r\n        storeAuthStateInCookie: true, // Enable cookies for mobile IE\r\n        // Remove clientSecret - should never be in frontend code\r\n        cloudDiscoveryMetadata: '{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]}'\r\n    },\r\n    cache: {\r\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\r\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    },\r\n    system: {\t\r\n        loggerOptions: {\t\r\n            loggerCallback: (level, message, containsPii) => {\t\r\n                if (containsPii) {\t\t\r\n                    return;\t\t\r\n                }\t\t\r\n                switch (level) {\r\n                    case LogLevel.Error:\r\n                        console.error(message);\r\n                        return;\r\n                    case LogLevel.Info:\r\n                        //console.info(message);\r\n                        return;\r\n                    case LogLevel.Verbose:\r\n                        console.debug(message);\r\n                        return;\r\n                    case LogLevel.Warning:\r\n                        console.warn(message);\r\n                        return;\r\n                    default:\r\n                        return;\r\n                }\t\r\n            }\t\r\n        }\t\r\n    }\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n    scopes: [ \"user.read\" ],\r\n   \r\n};\r\n\r\n\r\n/**\r\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\r\nexport const graphConfig = {\r\n    scopes: [ \"user.read\" ],\r\n\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,qBAAqB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG;EACtBC,IAAI,EAAE;IACFC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;IAC/CC,SAAS,EAAEH,OAAO,CAACC,GAAG,CAACG,yBAAyB;IAChDC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM;IACnCC,qBAAqB,EAAEH,MAAM,CAACC,QAAQ,CAACC,MAAM;IAC7CE,yBAAyB,EAAE,IAAI;IAC/BC,sBAAsB,EAAE,IAAI;IAAE;IAC9B;IACAC,sBAAsB,EAAE;EAC5B,CAAC;EACDC,KAAK,EAAE;IACHC,aAAa,EAAE,gBAAgB;IAAE;IACjCH,sBAAsB,EAAE,KAAK,CAAE;EACnC,CAAC;EACDI,MAAM,EAAE;IACJC,aAAa,EAAE;MACXC,cAAc,EAAEA,CAACC,KAAK,EAAEC,OAAO,EAAEC,WAAW,KAAK;QAC7C,IAAIA,WAAW,EAAE;UACb;QACJ;QACA,QAAQF,KAAK;UACT,KAAKtB,QAAQ,CAACyB,KAAK;YACfC,OAAO,CAACC,KAAK,CAACJ,OAAO,CAAC;YACtB;UACJ,KAAKvB,QAAQ,CAAC4B,IAAI;YACd;YACA;UACJ,KAAK5B,QAAQ,CAAC6B,OAAO;YACjBH,OAAO,CAACI,KAAK,CAACP,OAAO,CAAC;YACtB;UACJ,KAAKvB,QAAQ,CAAC+B,OAAO;YACjBL,OAAO,CAACM,IAAI,CAACT,OAAO,CAAC;YACrB;UACJ;YACI;QACR;MACJ;IACJ;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMU,YAAY,GAAG;EACxBC,MAAM,EAAE,CAAE,WAAW;AAEzB,CAAC;;AAGD;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG;EACvBD,MAAM,EAAE,CAAE,WAAW;AAEzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}