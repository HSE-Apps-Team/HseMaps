{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rexrt\\\\Downloads\\\\hsenavrepo\\\\HseMaps\\\\src\\\\modules\\\\StateManager.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\n\n/**\r\n * @module StateManager\r\n * @description Manages global application state using a hybrid approach combining \r\n * legacy object-based state and modern React Context API. Implements validation\r\n * rules for critical path properties to ensure data integrity.\r\n * \r\n * @example\r\n * // Using legacy API\r\n * StateManager.set('path', [1, 2, 3]);\r\n * const path = StateManager.get('path');\r\n * \r\n * // Using modern Context API\r\n * const { state, updateState } = useStateManager();\r\n * updateState('path', [1, 2, 3]);\r\n */\n\n/**\r\n * @type {Object.<string, function>}\r\n * @description Validation functions that enforce data integrity rules:\r\n * - path: Must be an array for storing navigation waypoints\r\n * - totalDistance: Must be a non-negative number representing total path length\r\n * - currentPathSegment: Must be null or a non-negative number for current position\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validators = {\n  path: Array.isArray,\n  totalDistance: value => typeof value === 'number' && value >= 0,\n  currentPathSegment: value => value === null || typeof value === 'number' && value >= 0\n};\n\n// Maintain backward compatibility with existing code\nconst state = {\n  totalDistance: 0,\n  firstPathRendered: true,\n  secondPathRendered: false,\n  currentFloor: 'main',\n  path: [],\n  distanceDomain: [],\n  currentPathSegment: null,\n  prevPathSegment: null,\n  maskedImages: null\n};\n\n// Legacy StateManager API\nexport const StateManager = {\n  get: key => key ? state[key] : state,\n  set: (key, value) => {\n    if (validators[key] && !validators[key](value)) return false;\n    state[key] = value;\n    if (key === 'secondPathRendered') {\n      state.currentFloor = value ? 'second' : 'main';\n    }\n    return true;\n  }\n};\n\n// Modern React Context API\nconst StateContext = /*#__PURE__*/createContext({\n  state,\n  updateState: () => {}\n});\nexport const StateProvider = ({\n  children\n}) => {\n  _s();\n  const [contextState, setContextState] = useState(state);\n  const updateState = (key, value) => {\n    var _validators$key;\n    if (((_validators$key = validators[key]) === null || _validators$key === void 0 ? void 0 : _validators$key.call(validators, value)) === false) return;\n    setContextState(prev => ({\n      ...prev,\n      [key]: value,\n      ...(key === 'secondPathRendered' && {\n        currentFloor: value ? 'second' : 'main'\n      })\n    }));\n\n    // Keep legacy state in sync\n    StateManager.set(key, value);\n  };\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      state: contextState,\n      updateState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(StateProvider, \"CZLt/485hH1H6UIkik1JkXPJXgE=\");\n_c = StateProvider;\nexport const useStateManager = () => {\n  _s2();\n  return useContext(StateContext);\n};\n_s2(useStateManager, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","validators","path","Array","isArray","totalDistance","value","currentPathSegment","state","firstPathRendered","secondPathRendered","currentFloor","distanceDomain","prevPathSegment","maskedImages","StateManager","get","key","set","StateContext","updateState","StateProvider","children","_s","contextState","setContextState","_validators$key","call","prev","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStateManager","_s2","$RefreshReg$"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/StateManager.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\n/**\r\n * @module StateManager\r\n * @description Manages global application state using a hybrid approach combining \r\n * legacy object-based state and modern React Context API. Implements validation\r\n * rules for critical path properties to ensure data integrity.\r\n * \r\n * @example\r\n * // Using legacy API\r\n * StateManager.set('path', [1, 2, 3]);\r\n * const path = StateManager.get('path');\r\n * \r\n * // Using modern Context API\r\n * const { state, updateState } = useStateManager();\r\n * updateState('path', [1, 2, 3]);\r\n */\r\n\r\n/**\r\n * @type {Object.<string, function>}\r\n * @description Validation functions that enforce data integrity rules:\r\n * - path: Must be an array for storing navigation waypoints\r\n * - totalDistance: Must be a non-negative number representing total path length\r\n * - currentPathSegment: Must be null or a non-negative number for current position\r\n */\r\nconst validators = {\r\n    path: Array.isArray,\r\n    totalDistance: value => typeof value === 'number' && value >= 0,\r\n    currentPathSegment: value => value === null || (typeof value === 'number' && value >= 0)\r\n};\r\n\r\n// Maintain backward compatibility with existing code\r\nconst state = {\r\n    totalDistance: 0,\r\n    firstPathRendered: true,\r\n    secondPathRendered: false,\r\n    currentFloor: 'main',\r\n    path: [],\r\n    distanceDomain: [],\r\n    currentPathSegment: null,\r\n    prevPathSegment: null,\r\n    maskedImages: null\r\n};\r\n\r\n// Legacy StateManager API\r\nexport const StateManager = {\r\n    get: key => key ? state[key] : state,\r\n    set: (key, value) => {\r\n        if (validators[key] && !validators[key](value)) return false;\r\n        state[key] = value;\r\n        if (key === 'secondPathRendered') {\r\n            state.currentFloor = value ? 'second' : 'main';\r\n        }\r\n        return true;\r\n    }\r\n};\r\n\r\n// Modern React Context API\r\nconst StateContext = createContext({ state, updateState: () => {} });\r\n\r\nexport const StateProvider = ({ children }) => {\r\n    const [contextState, setContextState] = useState(state);\r\n\r\n    const updateState = (key, value) => {\r\n        if (validators[key]?.(value) === false) return;\r\n        \r\n        setContextState(prev => ({\r\n            ...prev,\r\n            [key]: value,\r\n            ...(key === 'secondPathRendered' && {\r\n                currentFloor: value ? 'second' : 'main'\r\n            })\r\n        }));\r\n        \r\n        // Keep legacy state in sync\r\n        StateManager.set(key, value);\r\n    };\r\n\r\n    return (\r\n        <StateContext.Provider value={{ state: contextState, updateState }}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useStateManager = () => useContext(StateContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}