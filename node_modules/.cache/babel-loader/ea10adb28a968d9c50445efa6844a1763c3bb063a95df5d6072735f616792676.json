{"ast":null,"code":"/**\r\n * DOMCache - Efficient DOM element caching using Proxy\r\n * Automatically handles element reconnection and provides cached access\r\n * \r\n * @module DOMCache\r\n */\n\n/**\r\n * Proxy-based DOM element cache\r\n * - Automatically caches DOM queries\r\n * - Checks element connection status\r\n * - Refreshes cache for disconnected elements\r\n * \r\n * @type {Proxy}\r\n * \r\n * @example Usage\r\n * // Get element by selector (cached)\r\n * DOMCache['#myElement']        // Returns: <div id=\"myElement\">...</div>\r\n * DOMCache['.myClass']         // Returns: <div class=\"myClass\">...</div>\r\n * \r\n * // Automatic cache invalidation\r\n * element.remove()             // Element is removed from DOM\r\n * DOMCache['#myElement']       // Cache refreshed, new query performed\r\n * \r\n * @example Cache behavior\r\n * // First access - performs querySelector\r\n * DOMCache['#agent']          // Performs: document.querySelector('#agent')\r\n * \r\n * // Subsequent access - returns cached element if still connected\r\n * DOMCache['#agent']          // Returns cached element\r\n * \r\n * // After element disconnection - refreshes cache\r\n * DOMCache['#agent']          // Performs new querySelector if element disconnected\r\n */\nexport const DOMCache = new Proxy({}, {\n  /**\r\n   * Getter trap for DOM element access\r\n   * @param {Object} cache - Internal cache object\r\n   * @param {string} selector - CSS selector string\r\n   * @returns {Element|null} DOM element or null if not found\r\n   * \r\n   * @example\r\n   * DOMCache['#graph']      // Returns cached #graph element\r\n   * DOMCache['.invalid']    // Returns null if element not found\r\n   */\n  get: (cache, selector) => {\n    if (!cache[selector] || !cache[selector].isConnected) {\n      cache[selector] = document.querySelector(selector);\n    }\n    return cache[selector];\n  }\n});","map":{"version":3,"names":["DOMCache","Proxy","get","cache","selector","isConnected","document","querySelector"],"sources":["C:/Users/rexrt/Downloads/hsenavrepo/HseMaps/src/modules/DOMCache.js"],"sourcesContent":["/**\r\n * DOMCache - Efficient DOM element caching using Proxy\r\n * Automatically handles element reconnection and provides cached access\r\n * \r\n * @module DOMCache\r\n */\r\n\r\n/**\r\n * Proxy-based DOM element cache\r\n * - Automatically caches DOM queries\r\n * - Checks element connection status\r\n * - Refreshes cache for disconnected elements\r\n * \r\n * @type {Proxy}\r\n * \r\n * @example Usage\r\n * // Get element by selector (cached)\r\n * DOMCache['#myElement']        // Returns: <div id=\"myElement\">...</div>\r\n * DOMCache['.myClass']         // Returns: <div class=\"myClass\">...</div>\r\n * \r\n * // Automatic cache invalidation\r\n * element.remove()             // Element is removed from DOM\r\n * DOMCache['#myElement']       // Cache refreshed, new query performed\r\n * \r\n * @example Cache behavior\r\n * // First access - performs querySelector\r\n * DOMCache['#agent']          // Performs: document.querySelector('#agent')\r\n * \r\n * // Subsequent access - returns cached element if still connected\r\n * DOMCache['#agent']          // Returns cached element\r\n * \r\n * // After element disconnection - refreshes cache\r\n * DOMCache['#agent']          // Performs new querySelector if element disconnected\r\n */\r\nexport const DOMCache = new Proxy({}, {\r\n    /**\r\n     * Getter trap for DOM element access\r\n     * @param {Object} cache - Internal cache object\r\n     * @param {string} selector - CSS selector string\r\n     * @returns {Element|null} DOM element or null if not found\r\n     * \r\n     * @example\r\n     * DOMCache['#graph']      // Returns cached #graph element\r\n     * DOMCache['.invalid']    // Returns null if element not found\r\n     */\r\n    get: (cache, selector) => {\r\n        if (!cache[selector] || !cache[selector].isConnected) {\r\n            cache[selector] = document.querySelector(selector);\r\n        }\r\n        return cache[selector];\r\n    }\r\n});"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,QAAQ,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,EAAE;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,GAAG,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACtB,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,CAACC,WAAW,EAAE;MAClDF,KAAK,CAACC,QAAQ,CAAC,GAAGE,QAAQ,CAACC,aAAa,CAACH,QAAQ,CAAC;IACtD;IACA,OAAOD,KAAK,CAACC,QAAQ,CAAC;EAC1B;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}